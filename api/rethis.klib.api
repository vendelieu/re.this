// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <eu.vendeli.rethis:rethis>
open annotation class eu.vendeli.rethis.annotations/ConfigurationDSL : kotlin/Annotation { // eu.vendeli.rethis.annotations/ConfigurationDSL|null[0]
    constructor <init>() // eu.vendeli.rethis.annotations/ConfigurationDSL.<init>|<init>(){}[0]
}

open annotation class eu.vendeli.rethis.annotations/ReThisDSL : kotlin/Annotation { // eu.vendeli.rethis.annotations/ReThisDSL|null[0]
    constructor <init>() // eu.vendeli.rethis.annotations/ReThisDSL.<init>|<init>(){}[0]
}

open annotation class eu.vendeli.rethis.annotations/ReThisInternal : kotlin/Annotation { // eu.vendeli.rethis.annotations/ReThisInternal|null[0]
    constructor <init>() // eu.vendeli.rethis.annotations/ReThisInternal.<init>|<init>(){}[0]
}

final enum class eu.vendeli.rethis.types.common/GeoSort : kotlin/Enum<eu.vendeli.rethis.types.common/GeoSort> { // eu.vendeli.rethis.types.common/GeoSort|null[0]
    enum entry ASC // eu.vendeli.rethis.types.common/GeoSort.ASC|null[0]
    enum entry DESC // eu.vendeli.rethis.types.common/GeoSort.DESC|null[0]

    final val entries // eu.vendeli.rethis.types.common/GeoSort.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.rethis.types.common/GeoSort> // eu.vendeli.rethis.types.common/GeoSort.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.rethis.types.common/GeoSort // eu.vendeli.rethis.types.common/GeoSort.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.rethis.types.common/GeoSort> // eu.vendeli.rethis.types.common/GeoSort.values|values#static(){}[0]
}

final enum class eu.vendeli.rethis.types.common/GeoUnit : kotlin/Enum<eu.vendeli.rethis.types.common/GeoUnit> { // eu.vendeli.rethis.types.common/GeoUnit|null[0]
    enum entry FEET // eu.vendeli.rethis.types.common/GeoUnit.FEET|null[0]
    enum entry KILOMETERS // eu.vendeli.rethis.types.common/GeoUnit.KILOMETERS|null[0]
    enum entry METERS // eu.vendeli.rethis.types.common/GeoUnit.METERS|null[0]
    enum entry MILES // eu.vendeli.rethis.types.common/GeoUnit.MILES|null[0]

    final val entries // eu.vendeli.rethis.types.common/GeoUnit.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.rethis.types.common/GeoUnit> // eu.vendeli.rethis.types.common/GeoUnit.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/GeoUnit.toString|toString(){}[0]
    final fun valueOf(kotlin/String): eu.vendeli.rethis.types.common/GeoUnit // eu.vendeli.rethis.types.common/GeoUnit.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.rethis.types.common/GeoUnit> // eu.vendeli.rethis.types.common/GeoUnit.values|values#static(){}[0]
}

final enum class eu.vendeli.rethis.types.common/MoveDirection : kotlin/Enum<eu.vendeli.rethis.types.common/MoveDirection> { // eu.vendeli.rethis.types.common/MoveDirection|null[0]
    enum entry LEFT // eu.vendeli.rethis.types.common/MoveDirection.LEFT|null[0]
    enum entry RIGHT // eu.vendeli.rethis.types.common/MoveDirection.RIGHT|null[0]

    final val entries // eu.vendeli.rethis.types.common/MoveDirection.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.rethis.types.common/MoveDirection> // eu.vendeli.rethis.types.common/MoveDirection.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.rethis.types.common/MoveDirection // eu.vendeli.rethis.types.common/MoveDirection.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.rethis.types.common/MoveDirection> // eu.vendeli.rethis.types.common/MoveDirection.values|values#static(){}[0]
}

final enum class eu.vendeli.rethis.types.options/BitmapDataType : kotlin/Enum<eu.vendeli.rethis.types.options/BitmapDataType> { // eu.vendeli.rethis.types.options/BitmapDataType|null[0]
    enum entry BIT // eu.vendeli.rethis.types.options/BitmapDataType.BIT|null[0]
    enum entry BYTE // eu.vendeli.rethis.types.options/BitmapDataType.BYTE|null[0]

    final val entries // eu.vendeli.rethis.types.options/BitmapDataType.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.rethis.types.options/BitmapDataType> // eu.vendeli.rethis.types.options/BitmapDataType.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.rethis.types.options/BitmapDataType // eu.vendeli.rethis.types.options/BitmapDataType.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.rethis.types.options/BitmapDataType> // eu.vendeli.rethis.types.options/BitmapDataType.values|values#static(){}[0]
}

final enum class eu.vendeli.rethis.types.options/ZAggregate : kotlin/Enum<eu.vendeli.rethis.types.options/ZAggregate> { // eu.vendeli.rethis.types.options/ZAggregate|null[0]
    enum entry MAX // eu.vendeli.rethis.types.options/ZAggregate.MAX|null[0]
    enum entry MIN // eu.vendeli.rethis.types.options/ZAggregate.MIN|null[0]
    enum entry SUM // eu.vendeli.rethis.types.options/ZAggregate.SUM|null[0]

    final val entries // eu.vendeli.rethis.types.options/ZAggregate.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.rethis.types.options/ZAggregate> // eu.vendeli.rethis.types.options/ZAggregate.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): eu.vendeli.rethis.types.options/ZAggregate // eu.vendeli.rethis.types.options/ZAggregate.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<eu.vendeli.rethis.types.options/ZAggregate> // eu.vendeli.rethis.types.options/ZAggregate.values|values#static(){}[0]
}

abstract fun interface eu.vendeli.rethis.types.core/SubscriptionHandler { // eu.vendeli.rethis.types.core/SubscriptionHandler|null[0]
    abstract suspend fun onMessage(eu.vendeli.rethis/ReThis, kotlin/String) // eu.vendeli.rethis.types.core/SubscriptionHandler.onMessage|onMessage(eu.vendeli.rethis.ReThis;kotlin.String){}[0]
}

abstract interface eu.vendeli.rethis.types.core/Argument // eu.vendeli.rethis.types.core/Argument|null[0]

abstract interface eu.vendeli.rethis.types.core/SubscriptionEventHandler { // eu.vendeli.rethis.types.core/SubscriptionEventHandler|null[0]
    abstract suspend fun onException(kotlin/String, kotlin/Exception) // eu.vendeli.rethis.types.core/SubscriptionEventHandler.onException|onException(kotlin.String;kotlin.Exception){}[0]
    abstract suspend fun onSubscribe(kotlin/String, kotlin/Long) // eu.vendeli.rethis.types.core/SubscriptionEventHandler.onSubscribe|onSubscribe(kotlin.String;kotlin.Long){}[0]
    abstract suspend fun onUnsubscribe(kotlin/String, kotlin/Long) // eu.vendeli.rethis.types.core/SubscriptionEventHandler.onUnsubscribe|onUnsubscribe(kotlin.String;kotlin.Long){}[0]
}

abstract interface eu.vendeli.rethis.types.core/VaryingArgument { // eu.vendeli.rethis.types.core/VaryingArgument|null[0]
    abstract val data // eu.vendeli.rethis.types.core/VaryingArgument.data|{}data[0]
        abstract fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.core/VaryingArgument.data.<get-data>|<get-data>(){}[0]
}

final class <#A: kotlin/Any?> eu.vendeli.rethis.types.common/ScanResult { // eu.vendeli.rethis.types.common/ScanResult|null[0]
    constructor <init>(kotlin/String, kotlin.collections/List<#A>) // eu.vendeli.rethis.types.common/ScanResult.<init>|<init>(kotlin.String;kotlin.collections.List<1:0>){}[0]

    final val cursor // eu.vendeli.rethis.types.common/ScanResult.cursor|{}cursor[0]
        final fun <get-cursor>(): kotlin/String // eu.vendeli.rethis.types.common/ScanResult.cursor.<get-cursor>|<get-cursor>(){}[0]
    final val keys // eu.vendeli.rethis.types.common/ScanResult.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/List<#A> // eu.vendeli.rethis.types.common/ScanResult.keys.<get-keys>|<get-keys>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/ScanResult.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<#A> // eu.vendeli.rethis.types.common/ScanResult.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin.collections/List<#A> = ...): eu.vendeli.rethis.types.common/ScanResult<#A> // eu.vendeli.rethis.types.common/ScanResult.copy|copy(kotlin.String;kotlin.collections.List<1:0>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/ScanResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/ScanResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/ScanResult.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/ChannelSubscription { // eu.vendeli.rethis.types.common/ChannelSubscription|null[0]
    constructor <init>(kotlin/String, eu.vendeli.rethis.types.core/SubscriptionHandler) // eu.vendeli.rethis.types.common/ChannelSubscription.<init>|<init>(kotlin.String;eu.vendeli.rethis.types.core.SubscriptionHandler){}[0]

    final val channel // eu.vendeli.rethis.types.common/ChannelSubscription.channel|{}channel[0]
        final fun <get-channel>(): kotlin/String // eu.vendeli.rethis.types.common/ChannelSubscription.channel.<get-channel>|<get-channel>(){}[0]
    final val handler // eu.vendeli.rethis.types.common/ChannelSubscription.handler|{}handler[0]
        final fun <get-handler>(): eu.vendeli.rethis.types.core/SubscriptionHandler // eu.vendeli.rethis.types.common/ChannelSubscription.handler.<get-handler>|<get-handler>(){}[0]
}

final class eu.vendeli.rethis.types.common/GeoMember : eu.vendeli.rethis.types.core/VaryingArgument { // eu.vendeli.rethis.types.common/GeoMember|null[0]
    constructor <init>(kotlin/Double, kotlin/Double, kotlin/String) // eu.vendeli.rethis.types.common/GeoMember.<init>|<init>(kotlin.Double;kotlin.Double;kotlin.String){}[0]

    final val data // eu.vendeli.rethis.types.common/GeoMember.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.common/GeoMember.data.<get-data>|<get-data>(){}[0]
    final val latitude // eu.vendeli.rethis.types.common/GeoMember.latitude|{}latitude[0]
        final fun <get-latitude>(): kotlin/Double // eu.vendeli.rethis.types.common/GeoMember.latitude.<get-latitude>|<get-latitude>(){}[0]
    final val longitude // eu.vendeli.rethis.types.common/GeoMember.longitude|{}longitude[0]
        final fun <get-longitude>(): kotlin/Double // eu.vendeli.rethis.types.common/GeoMember.longitude.<get-longitude>|<get-longitude>(){}[0]
    final val member // eu.vendeli.rethis.types.common/GeoMember.member|{}member[0]
        final fun <get-member>(): kotlin/String // eu.vendeli.rethis.types.common/GeoMember.member.<get-member>|<get-member>(){}[0]

    final fun component1(): kotlin/Double // eu.vendeli.rethis.types.common/GeoMember.component1|component1(){}[0]
    final fun component2(): kotlin/Double // eu.vendeli.rethis.types.common/GeoMember.component2|component2(){}[0]
    final fun component3(): kotlin/String // eu.vendeli.rethis.types.common/GeoMember.component3|component3(){}[0]
    final fun copy(kotlin/Double = ..., kotlin/Double = ..., kotlin/String = ...): eu.vendeli.rethis.types.common/GeoMember // eu.vendeli.rethis.types.common/GeoMember.copy|copy(kotlin.Double;kotlin.Double;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/GeoMember.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/GeoMember.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/GeoMember.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/GeoPosition { // eu.vendeli.rethis.types.common/GeoPosition|null[0]
    constructor <init>(kotlin/Double, kotlin/Double) // eu.vendeli.rethis.types.common/GeoPosition.<init>|<init>(kotlin.Double;kotlin.Double){}[0]

    final val latitude // eu.vendeli.rethis.types.common/GeoPosition.latitude|{}latitude[0]
        final fun <get-latitude>(): kotlin/Double // eu.vendeli.rethis.types.common/GeoPosition.latitude.<get-latitude>|<get-latitude>(){}[0]
    final val longitude // eu.vendeli.rethis.types.common/GeoPosition.longitude|{}longitude[0]
        final fun <get-longitude>(): kotlin/Double // eu.vendeli.rethis.types.common/GeoPosition.longitude.<get-longitude>|<get-longitude>(){}[0]

    final fun component1(): kotlin/Double // eu.vendeli.rethis.types.common/GeoPosition.component1|component1(){}[0]
    final fun component2(): kotlin/Double // eu.vendeli.rethis.types.common/GeoPosition.component2|component2(){}[0]
    final fun copy(kotlin/Double = ..., kotlin/Double = ...): eu.vendeli.rethis.types.common/GeoPosition // eu.vendeli.rethis.types.common/GeoPosition.copy|copy(kotlin.Double;kotlin.Double){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/GeoPosition.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/GeoPosition.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/GeoPosition.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/GeoSearchResult { // eu.vendeli.rethis.types.common/GeoSearchResult|null[0]
    constructor <init>(kotlin/String, kotlin/Double?, eu.vendeli.rethis.types.common/GeoPosition?, kotlin/Long?) // eu.vendeli.rethis.types.common/GeoSearchResult.<init>|<init>(kotlin.String;kotlin.Double?;eu.vendeli.rethis.types.common.GeoPosition?;kotlin.Long?){}[0]

    final val coordinates // eu.vendeli.rethis.types.common/GeoSearchResult.coordinates|{}coordinates[0]
        final fun <get-coordinates>(): eu.vendeli.rethis.types.common/GeoPosition? // eu.vendeli.rethis.types.common/GeoSearchResult.coordinates.<get-coordinates>|<get-coordinates>(){}[0]
    final val distance // eu.vendeli.rethis.types.common/GeoSearchResult.distance|{}distance[0]
        final fun <get-distance>(): kotlin/Double? // eu.vendeli.rethis.types.common/GeoSearchResult.distance.<get-distance>|<get-distance>(){}[0]
    final val hash // eu.vendeli.rethis.types.common/GeoSearchResult.hash|{}hash[0]
        final fun <get-hash>(): kotlin/Long? // eu.vendeli.rethis.types.common/GeoSearchResult.hash.<get-hash>|<get-hash>(){}[0]
    final val member // eu.vendeli.rethis.types.common/GeoSearchResult.member|{}member[0]
        final fun <get-member>(): kotlin/String // eu.vendeli.rethis.types.common/GeoSearchResult.member.<get-member>|<get-member>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/GeoSearchResult.component1|component1(){}[0]
    final fun component2(): kotlin/Double? // eu.vendeli.rethis.types.common/GeoSearchResult.component2|component2(){}[0]
    final fun component3(): eu.vendeli.rethis.types.common/GeoPosition? // eu.vendeli.rethis.types.common/GeoSearchResult.component3|component3(){}[0]
    final fun component4(): kotlin/Long? // eu.vendeli.rethis.types.common/GeoSearchResult.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Double? = ..., eu.vendeli.rethis.types.common/GeoPosition? = ..., kotlin/Long? = ...): eu.vendeli.rethis.types.common/GeoSearchResult // eu.vendeli.rethis.types.common/GeoSearchResult.copy|copy(kotlin.String;kotlin.Double?;eu.vendeli.rethis.types.common.GeoPosition?;kotlin.Long?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/GeoSearchResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/GeoSearchResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/GeoSearchResult.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/JsonEntry : eu.vendeli.rethis.types.core/VaryingArgument { // eu.vendeli.rethis.types.common/JsonEntry|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/String) // eu.vendeli.rethis.types.common/JsonEntry.<init>|<init>(kotlin.String;kotlin.String;kotlin.String){}[0]

    final val data // eu.vendeli.rethis.types.common/JsonEntry.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/StringArg> // eu.vendeli.rethis.types.common/JsonEntry.data.<get-data>|<get-data>(){}[0]
}

final class eu.vendeli.rethis.types.common/LcsResult { // eu.vendeli.rethis.types.common/LcsResult|null[0]
    constructor <init>(kotlin.collections/List<kotlin.collections/List<eu.vendeli.rethis.types.common/LcsResult.LcsMatch>>, kotlin/Long) // eu.vendeli.rethis.types.common/LcsResult.<init>|<init>(kotlin.collections.List<kotlin.collections.List<eu.vendeli.rethis.types.common.LcsResult.LcsMatch>>;kotlin.Long){}[0]

    final val matches // eu.vendeli.rethis.types.common/LcsResult.matches|{}matches[0]
        final fun <get-matches>(): kotlin.collections/List<kotlin.collections/List<eu.vendeli.rethis.types.common/LcsResult.LcsMatch>> // eu.vendeli.rethis.types.common/LcsResult.matches.<get-matches>|<get-matches>(){}[0]
    final val totalLength // eu.vendeli.rethis.types.common/LcsResult.totalLength|{}totalLength[0]
        final fun <get-totalLength>(): kotlin/Long // eu.vendeli.rethis.types.common/LcsResult.totalLength.<get-totalLength>|<get-totalLength>(){}[0]

    final fun component1(): kotlin.collections/List<kotlin.collections/List<eu.vendeli.rethis.types.common/LcsResult.LcsMatch>> // eu.vendeli.rethis.types.common/LcsResult.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.rethis.types.common/LcsResult.component2|component2(){}[0]
    final fun copy(kotlin.collections/List<kotlin.collections/List<eu.vendeli.rethis.types.common/LcsResult.LcsMatch>> = ..., kotlin/Long = ...): eu.vendeli.rethis.types.common/LcsResult // eu.vendeli.rethis.types.common/LcsResult.copy|copy(kotlin.collections.List<kotlin.collections.List<eu.vendeli.rethis.types.common.LcsResult.LcsMatch>>;kotlin.Long){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/LcsResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/LcsResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/LcsResult.toString|toString(){}[0]

    final class LcsMatch { // eu.vendeli.rethis.types.common/LcsResult.LcsMatch|null[0]
        constructor <init>(kotlin/Long, kotlin/Long, kotlin/Long? = ...) // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.<init>|<init>(kotlin.Long;kotlin.Long;kotlin.Long?){}[0]

        final val end // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.end|{}end[0]
            final fun <get-end>(): kotlin/Long // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.end.<get-end>|<get-end>(){}[0]
        final val length // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.length|{}length[0]
            final fun <get-length>(): kotlin/Long? // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.length.<get-length>|<get-length>(){}[0]
        final val start // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.start|{}start[0]
            final fun <get-start>(): kotlin/Long // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.start.<get-start>|<get-start>(){}[0]

        final fun component1(): kotlin/Long // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.component1|component1(){}[0]
        final fun component2(): kotlin/Long // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.component2|component2(){}[0]
        final fun component3(): kotlin/Long? // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.component3|component3(){}[0]
        final fun copy(kotlin/Long = ..., kotlin/Long = ..., kotlin/Long? = ...): eu.vendeli.rethis.types.common/LcsResult.LcsMatch // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.copy|copy(kotlin.Long;kotlin.Long;kotlin.Long?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/LcsResult.LcsMatch.toString|toString(){}[0]
    }
}

final class eu.vendeli.rethis.types.common/MPopResult { // eu.vendeli.rethis.types.common/MPopResult|null[0]
    constructor <init>(kotlin/String, kotlin.collections/List<kotlin/String>) // eu.vendeli.rethis.types.common/MPopResult.<init>|<init>(kotlin.String;kotlin.collections.List<kotlin.String>){}[0]

    final val name // eu.vendeli.rethis.types.common/MPopResult.name|{}name[0]
        final fun <get-name>(): kotlin/String // eu.vendeli.rethis.types.common/MPopResult.name.<get-name>|<get-name>(){}[0]
    final val poppedElements // eu.vendeli.rethis.types.common/MPopResult.poppedElements|{}poppedElements[0]
        final fun <get-poppedElements>(): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.types.common/MPopResult.poppedElements.<get-poppedElements>|<get-poppedElements>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/MPopResult.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.types.common/MPopResult.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin.collections/List<kotlin/String> = ...): eu.vendeli.rethis.types.common/MPopResult // eu.vendeli.rethis.types.common/MPopResult.copy|copy(kotlin.String;kotlin.collections.List<kotlin.String>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/MPopResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/MPopResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/MPopResult.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/PopResult { // eu.vendeli.rethis.types.common/PopResult|null[0]
    constructor <init>(kotlin/String, kotlin/String) // eu.vendeli.rethis.types.common/PopResult.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val key // eu.vendeli.rethis.types.common/PopResult.key|{}key[0]
        final fun <get-key>(): kotlin/String // eu.vendeli.rethis.types.common/PopResult.key.<get-key>|<get-key>(){}[0]
    final val popped // eu.vendeli.rethis.types.common/PopResult.popped|{}popped[0]
        final fun <get-popped>(): kotlin/String // eu.vendeli.rethis.types.common/PopResult.popped.<get-popped>|<get-popped>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/PopResult.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.rethis.types.common/PopResult.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): eu.vendeli.rethis.types.common/PopResult // eu.vendeli.rethis.types.common/PopResult.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/PopResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/PopResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/PopResult.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/PubSubNumEntry { // eu.vendeli.rethis.types.common/PubSubNumEntry|null[0]
    constructor <init>(kotlin/String, kotlin/Long) // eu.vendeli.rethis.types.common/PubSubNumEntry.<init>|<init>(kotlin.String;kotlin.Long){}[0]

    final val name // eu.vendeli.rethis.types.common/PubSubNumEntry.name|{}name[0]
        final fun <get-name>(): kotlin/String // eu.vendeli.rethis.types.common/PubSubNumEntry.name.<get-name>|<get-name>(){}[0]
    final val subscribersCount // eu.vendeli.rethis.types.common/PubSubNumEntry.subscribersCount|{}subscribersCount[0]
        final fun <get-subscribersCount>(): kotlin/Long // eu.vendeli.rethis.types.common/PubSubNumEntry.subscribersCount.<get-subscribersCount>|<get-subscribersCount>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/PubSubNumEntry.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.rethis.types.common/PubSubNumEntry.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Long = ...): eu.vendeli.rethis.types.common/PubSubNumEntry // eu.vendeli.rethis.types.common/PubSubNumEntry.copy|copy(kotlin.String;kotlin.Long){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/PubSubNumEntry.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/PubSubNumEntry.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/PubSubNumEntry.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/SortedSetEntry { // eu.vendeli.rethis.types.common/SortedSetEntry|null[0]
    constructor <init>(kotlin/String, kotlin/Double) // eu.vendeli.rethis.types.common/SortedSetEntry.<init>|<init>(kotlin.String;kotlin.Double){}[0]

    final val member // eu.vendeli.rethis.types.common/SortedSetEntry.member|{}member[0]
        final fun <get-member>(): kotlin/String // eu.vendeli.rethis.types.common/SortedSetEntry.member.<get-member>|<get-member>(){}[0]
    final val score // eu.vendeli.rethis.types.common/SortedSetEntry.score|{}score[0]
        final fun <get-score>(): kotlin/Double // eu.vendeli.rethis.types.common/SortedSetEntry.score.<get-score>|<get-score>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/SortedSetEntry.component1|component1(){}[0]
    final fun component2(): kotlin/Double // eu.vendeli.rethis.types.common/SortedSetEntry.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Double = ...): eu.vendeli.rethis.types.common/SortedSetEntry // eu.vendeli.rethis.types.common/SortedSetEntry.copy|copy(kotlin.String;kotlin.Double){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/SortedSetEntry.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/SortedSetEntry.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/SortedSetEntry.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/WaitAofResult { // eu.vendeli.rethis.types.common/WaitAofResult|null[0]
    constructor <init>(kotlin/Long, kotlin/Long) // eu.vendeli.rethis.types.common/WaitAofResult.<init>|<init>(kotlin.Long;kotlin.Long){}[0]

    final val fsyncedRedises // eu.vendeli.rethis.types.common/WaitAofResult.fsyncedRedises|{}fsyncedRedises[0]
        final fun <get-fsyncedRedises>(): kotlin/Long // eu.vendeli.rethis.types.common/WaitAofResult.fsyncedRedises.<get-fsyncedRedises>|<get-fsyncedRedises>(){}[0]
    final val fsyncedReplicas // eu.vendeli.rethis.types.common/WaitAofResult.fsyncedReplicas|{}fsyncedReplicas[0]
        final fun <get-fsyncedReplicas>(): kotlin/Long // eu.vendeli.rethis.types.common/WaitAofResult.fsyncedReplicas.<get-fsyncedReplicas>|<get-fsyncedReplicas>(){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.rethis.types.common/WaitAofResult.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.rethis.types.common/WaitAofResult.component2|component2(){}[0]
    final fun copy(kotlin/Long = ..., kotlin/Long = ...): eu.vendeli.rethis.types.common/WaitAofResult // eu.vendeli.rethis.types.common/WaitAofResult.copy|copy(kotlin.Long;kotlin.Long){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/WaitAofResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/WaitAofResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/WaitAofResult.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/XAutoClaimResult { // eu.vendeli.rethis.types.common/XAutoClaimResult|null[0]
    constructor <init>(kotlin/String, kotlin/Long, kotlin/Long, kotlin/Long, kotlin.collections/List<eu.vendeli.rethis.types.common/XRangeEntry>) // eu.vendeli.rethis.types.common/XAutoClaimResult.<init>|<init>(kotlin.String;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.collections.List<eu.vendeli.rethis.types.common.XRangeEntry>){}[0]

    final val events // eu.vendeli.rethis.types.common/XAutoClaimResult.events|{}events[0]
        final fun <get-events>(): kotlin.collections/List<eu.vendeli.rethis.types.common/XRangeEntry> // eu.vendeli.rethis.types.common/XAutoClaimResult.events.<get-events>|<get-events>(){}[0]
    final val id // eu.vendeli.rethis.types.common/XAutoClaimResult.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.rethis.types.common/XAutoClaimResult.id.<get-id>|<get-id>(){}[0]
    final val idle // eu.vendeli.rethis.types.common/XAutoClaimResult.idle|{}idle[0]
        final fun <get-idle>(): kotlin/Long // eu.vendeli.rethis.types.common/XAutoClaimResult.idle.<get-idle>|<get-idle>(){}[0]
    final val reclaimed // eu.vendeli.rethis.types.common/XAutoClaimResult.reclaimed|{}reclaimed[0]
        final fun <get-reclaimed>(): kotlin/Long // eu.vendeli.rethis.types.common/XAutoClaimResult.reclaimed.<get-reclaimed>|<get-reclaimed>(){}[0]
    final val time // eu.vendeli.rethis.types.common/XAutoClaimResult.time|{}time[0]
        final fun <get-time>(): kotlin/Long // eu.vendeli.rethis.types.common/XAutoClaimResult.time.<get-time>|<get-time>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/XAutoClaimResult.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.rethis.types.common/XAutoClaimResult.component2|component2(){}[0]
    final fun component3(): kotlin/Long // eu.vendeli.rethis.types.common/XAutoClaimResult.component3|component3(){}[0]
    final fun component4(): kotlin/Long // eu.vendeli.rethis.types.common/XAutoClaimResult.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<eu.vendeli.rethis.types.common/XRangeEntry> // eu.vendeli.rethis.types.common/XAutoClaimResult.component5|component5(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Long = ..., kotlin/Long = ..., kotlin/Long = ..., kotlin.collections/List<eu.vendeli.rethis.types.common/XRangeEntry> = ...): eu.vendeli.rethis.types.common/XAutoClaimResult // eu.vendeli.rethis.types.common/XAutoClaimResult.copy|copy(kotlin.String;kotlin.Long;kotlin.Long;kotlin.Long;kotlin.collections.List<eu.vendeli.rethis.types.common.XRangeEntry>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/XAutoClaimResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/XAutoClaimResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/XAutoClaimResult.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/XClaimResult { // eu.vendeli.rethis.types.common/XClaimResult|null[0]
    constructor <init>(kotlin/String, kotlin/Long, kotlin/Long, kotlin.collections/List<eu.vendeli.rethis.types.common/XRangeEntry>) // eu.vendeli.rethis.types.common/XClaimResult.<init>|<init>(kotlin.String;kotlin.Long;kotlin.Long;kotlin.collections.List<eu.vendeli.rethis.types.common.XRangeEntry>){}[0]

    final val events // eu.vendeli.rethis.types.common/XClaimResult.events|{}events[0]
        final fun <get-events>(): kotlin.collections/List<eu.vendeli.rethis.types.common/XRangeEntry> // eu.vendeli.rethis.types.common/XClaimResult.events.<get-events>|<get-events>(){}[0]
    final val id // eu.vendeli.rethis.types.common/XClaimResult.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.rethis.types.common/XClaimResult.id.<get-id>|<get-id>(){}[0]
    final val idle // eu.vendeli.rethis.types.common/XClaimResult.idle|{}idle[0]
        final fun <get-idle>(): kotlin/Long // eu.vendeli.rethis.types.common/XClaimResult.idle.<get-idle>|<get-idle>(){}[0]
    final val time // eu.vendeli.rethis.types.common/XClaimResult.time|{}time[0]
        final fun <get-time>(): kotlin/Long // eu.vendeli.rethis.types.common/XClaimResult.time.<get-time>|<get-time>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/XClaimResult.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.rethis.types.common/XClaimResult.component2|component2(){}[0]
    final fun component3(): kotlin/Long // eu.vendeli.rethis.types.common/XClaimResult.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<eu.vendeli.rethis.types.common/XRangeEntry> // eu.vendeli.rethis.types.common/XClaimResult.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Long = ..., kotlin/Long = ..., kotlin.collections/List<eu.vendeli.rethis.types.common/XRangeEntry> = ...): eu.vendeli.rethis.types.common/XClaimResult // eu.vendeli.rethis.types.common/XClaimResult.copy|copy(kotlin.String;kotlin.Long;kotlin.Long;kotlin.collections.List<eu.vendeli.rethis.types.common.XRangeEntry>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/XClaimResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/XClaimResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/XClaimResult.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/XInfoConsumer { // eu.vendeli.rethis.types.common/XInfoConsumer|null[0]
    constructor <init>(kotlin/String, kotlin/Long, kotlin/Long) // eu.vendeli.rethis.types.common/XInfoConsumer.<init>|<init>(kotlin.String;kotlin.Long;kotlin.Long){}[0]

    final val idle // eu.vendeli.rethis.types.common/XInfoConsumer.idle|{}idle[0]
        final fun <get-idle>(): kotlin/Long // eu.vendeli.rethis.types.common/XInfoConsumer.idle.<get-idle>|<get-idle>(){}[0]
    final val name // eu.vendeli.rethis.types.common/XInfoConsumer.name|{}name[0]
        final fun <get-name>(): kotlin/String // eu.vendeli.rethis.types.common/XInfoConsumer.name.<get-name>|<get-name>(){}[0]
    final val pending // eu.vendeli.rethis.types.common/XInfoConsumer.pending|{}pending[0]
        final fun <get-pending>(): kotlin/Long // eu.vendeli.rethis.types.common/XInfoConsumer.pending.<get-pending>|<get-pending>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/XInfoConsumer.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.rethis.types.common/XInfoConsumer.component2|component2(){}[0]
    final fun component3(): kotlin/Long // eu.vendeli.rethis.types.common/XInfoConsumer.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Long = ..., kotlin/Long = ...): eu.vendeli.rethis.types.common/XInfoConsumer // eu.vendeli.rethis.types.common/XInfoConsumer.copy|copy(kotlin.String;kotlin.Long;kotlin.Long){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/XInfoConsumer.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/XInfoConsumer.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/XInfoConsumer.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/XInfoGroup { // eu.vendeli.rethis.types.common/XInfoGroup|null[0]
    constructor <init>(kotlin/String, kotlin/Long, kotlin/Long, kotlin/String) // eu.vendeli.rethis.types.common/XInfoGroup.<init>|<init>(kotlin.String;kotlin.Long;kotlin.Long;kotlin.String){}[0]

    final val consumers // eu.vendeli.rethis.types.common/XInfoGroup.consumers|{}consumers[0]
        final fun <get-consumers>(): kotlin/Long // eu.vendeli.rethis.types.common/XInfoGroup.consumers.<get-consumers>|<get-consumers>(){}[0]
    final val lastDeliveredId // eu.vendeli.rethis.types.common/XInfoGroup.lastDeliveredId|{}lastDeliveredId[0]
        final fun <get-lastDeliveredId>(): kotlin/String // eu.vendeli.rethis.types.common/XInfoGroup.lastDeliveredId.<get-lastDeliveredId>|<get-lastDeliveredId>(){}[0]
    final val name // eu.vendeli.rethis.types.common/XInfoGroup.name|{}name[0]
        final fun <get-name>(): kotlin/String // eu.vendeli.rethis.types.common/XInfoGroup.name.<get-name>|<get-name>(){}[0]
    final val pending // eu.vendeli.rethis.types.common/XInfoGroup.pending|{}pending[0]
        final fun <get-pending>(): kotlin/Long // eu.vendeli.rethis.types.common/XInfoGroup.pending.<get-pending>|<get-pending>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/XInfoGroup.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.rethis.types.common/XInfoGroup.component2|component2(){}[0]
    final fun component3(): kotlin/Long // eu.vendeli.rethis.types.common/XInfoGroup.component3|component3(){}[0]
    final fun component4(): kotlin/String // eu.vendeli.rethis.types.common/XInfoGroup.component4|component4(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Long = ..., kotlin/Long = ..., kotlin/String = ...): eu.vendeli.rethis.types.common/XInfoGroup // eu.vendeli.rethis.types.common/XInfoGroup.copy|copy(kotlin.String;kotlin.Long;kotlin.Long;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/XInfoGroup.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/XInfoGroup.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/XInfoGroup.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/XRangeEntry { // eu.vendeli.rethis.types.common/XRangeEntry|null[0]
    constructor <init>(kotlin/String, kotlin.collections/Map<kotlin/String, kotlin/String>) // eu.vendeli.rethis.types.common/XRangeEntry.<init>|<init>(kotlin.String;kotlin.collections.Map<kotlin.String,kotlin.String>){}[0]

    final val fields // eu.vendeli.rethis.types.common/XRangeEntry.fields|{}fields[0]
        final fun <get-fields>(): kotlin.collections/Map<kotlin/String, kotlin/String> // eu.vendeli.rethis.types.common/XRangeEntry.fields.<get-fields>|<get-fields>(){}[0]
    final val id // eu.vendeli.rethis.types.common/XRangeEntry.id|{}id[0]
        final fun <get-id>(): kotlin/String // eu.vendeli.rethis.types.common/XRangeEntry.id.<get-id>|<get-id>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/XRangeEntry.component1|component1(){}[0]
    final fun component2(): kotlin.collections/Map<kotlin/String, kotlin/String> // eu.vendeli.rethis.types.common/XRangeEntry.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin.collections/Map<kotlin/String, kotlin/String> = ...): eu.vendeli.rethis.types.common/XRangeEntry // eu.vendeli.rethis.types.common/XRangeEntry.copy|copy(kotlin.String;kotlin.collections.Map<kotlin.String,kotlin.String>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/XRangeEntry.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/XRangeEntry.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/XRangeEntry.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/ZMember { // eu.vendeli.rethis.types.common/ZMember|null[0]
    constructor <init>(kotlin/String, kotlin/Double) // eu.vendeli.rethis.types.common/ZMember.<init>|<init>(kotlin.String;kotlin.Double){}[0]

    final val member // eu.vendeli.rethis.types.common/ZMember.member|{}member[0]
        final fun <get-member>(): kotlin/String // eu.vendeli.rethis.types.common/ZMember.member.<get-member>|<get-member>(){}[0]
    final val score // eu.vendeli.rethis.types.common/ZMember.score|{}score[0]
        final fun <get-score>(): kotlin/Double // eu.vendeli.rethis.types.common/ZMember.score.<get-score>|<get-score>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/ZMember.component1|component1(){}[0]
    final fun component2(): kotlin/Double // eu.vendeli.rethis.types.common/ZMember.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/Double = ...): eu.vendeli.rethis.types.common/ZMember // eu.vendeli.rethis.types.common/ZMember.copy|copy(kotlin.String;kotlin.Double){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/ZMember.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/ZMember.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/ZMember.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.common/ZPopResult { // eu.vendeli.rethis.types.common/ZPopResult|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Double) // eu.vendeli.rethis.types.common/ZPopResult.<init>|<init>(kotlin.String;kotlin.String;kotlin.Double){}[0]

    final val key // eu.vendeli.rethis.types.common/ZPopResult.key|{}key[0]
        final fun <get-key>(): kotlin/String // eu.vendeli.rethis.types.common/ZPopResult.key.<get-key>|<get-key>(){}[0]
    final val popped // eu.vendeli.rethis.types.common/ZPopResult.popped|{}popped[0]
        final fun <get-popped>(): kotlin/String // eu.vendeli.rethis.types.common/ZPopResult.popped.<get-popped>|<get-popped>(){}[0]
    final val score // eu.vendeli.rethis.types.common/ZPopResult.score|{}score[0]
        final fun <get-score>(): kotlin/Double // eu.vendeli.rethis.types.common/ZPopResult.score.<get-score>|<get-score>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.common/ZPopResult.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.rethis.types.common/ZPopResult.component2|component2(){}[0]
    final fun component3(): kotlin/Double // eu.vendeli.rethis.types.common/ZPopResult.component3|component3(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Double = ...): eu.vendeli.rethis.types.common/ZPopResult // eu.vendeli.rethis.types.common/ZPopResult.copy|copy(kotlin.String;kotlin.String;kotlin.Double){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.common/ZPopResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.common/ZPopResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.common/ZPopResult.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/ActiveSubscriptions { // eu.vendeli.rethis.types.core/ActiveSubscriptions|null[0]
    constructor <init>() // eu.vendeli.rethis.types.core/ActiveSubscriptions.<init>|<init>(){}[0]

    final val size // eu.vendeli.rethis.types.core/ActiveSubscriptions.size|{}size[0]
        final fun <get-size>(): kotlin/Int // eu.vendeli.rethis.types.core/ActiveSubscriptions.size.<get-size>|<get-size>(){}[0]

    final fun isActive(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.types.core/ActiveSubscriptions.isActive|isActive(kotlin.String){}[0]
    final fun setEventHandler(eu.vendeli.rethis.types.core/SubscriptionEventHandler) // eu.vendeli.rethis.types.core/ActiveSubscriptions.setEventHandler|setEventHandler(eu.vendeli.rethis.types.core.SubscriptionEventHandler){}[0]
    final fun unsubscribe(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.types.core/ActiveSubscriptions.unsubscribe|unsubscribe(kotlin.String){}[0]
    final fun unsubscribeAll(): kotlin/Boolean // eu.vendeli.rethis.types.core/ActiveSubscriptions.unsubscribeAll|unsubscribeAll(){}[0]
}

final class eu.vendeli.rethis.types.core/AuthConfiguration { // eu.vendeli.rethis.types.core/AuthConfiguration|null[0]
    constructor <init>(kotlin/String, kotlin/String? = ...) // eu.vendeli.rethis.types.core/AuthConfiguration.<init>|<init>(kotlin.String;kotlin.String?){}[0]

    final var password // eu.vendeli.rethis.types.core/AuthConfiguration.password|{}password[0]
        final fun <get-password>(): kotlin/String // eu.vendeli.rethis.types.core/AuthConfiguration.password.<get-password>|<get-password>(){}[0]
        final fun <set-password>(kotlin/String) // eu.vendeli.rethis.types.core/AuthConfiguration.password.<set-password>|<set-password>(kotlin.String){}[0]
    final var username // eu.vendeli.rethis.types.core/AuthConfiguration.username|{}username[0]
        final fun <get-username>(): kotlin/String? // eu.vendeli.rethis.types.core/AuthConfiguration.username.<get-username>|<get-username>(){}[0]
        final fun <set-username>(kotlin/String?) // eu.vendeli.rethis.types.core/AuthConfiguration.username.<set-username>|<set-username>(kotlin.String?){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.core/AuthConfiguration.component1|component1(){}[0]
    final fun component2(): kotlin/String? // eu.vendeli.rethis.types.core/AuthConfiguration.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String? = ...): eu.vendeli.rethis.types.core/AuthConfiguration // eu.vendeli.rethis.types.core/AuthConfiguration.copy|copy(kotlin.String;kotlin.String?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/AuthConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/AuthConfiguration.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/AuthConfiguration.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/BigNumber : eu.vendeli.rethis.types.core/RPrimitive { // eu.vendeli.rethis.types.core/BigNumber|null[0]
    constructor <init>(com.ionspin.kotlin.bignum.integer/BigInteger) // eu.vendeli.rethis.types.core/BigNumber.<init>|<init>(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]

    final val value // eu.vendeli.rethis.types.core/BigNumber.value|{}value[0]
        final fun <get-value>(): com.ionspin.kotlin.bignum.integer/BigInteger // eu.vendeli.rethis.types.core/BigNumber.value.<get-value>|<get-value>(){}[0]

    final fun component1(): com.ionspin.kotlin.bignum.integer/BigInteger // eu.vendeli.rethis.types.core/BigNumber.component1|component1(){}[0]
    final fun copy(com.ionspin.kotlin.bignum.integer/BigInteger = ...): eu.vendeli.rethis.types.core/BigNumber // eu.vendeli.rethis.types.core/BigNumber.copy|copy(com.ionspin.kotlin.bignum.integer.BigInteger){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/BigNumber.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/BigNumber.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/BigNumber.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/Bool : eu.vendeli.rethis.types.core/RPrimitive { // eu.vendeli.rethis.types.core/Bool|null[0]
    constructor <init>(kotlin/Boolean) // eu.vendeli.rethis.types.core/Bool.<init>|<init>(kotlin.Boolean){}[0]

    final val value // eu.vendeli.rethis.types.core/Bool.value|{}value[0]
        final fun <get-value>(): kotlin/Boolean // eu.vendeli.rethis.types.core/Bool.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin/Boolean // eu.vendeli.rethis.types.core/Bool.component1|component1(){}[0]
    final fun copy(kotlin/Boolean = ...): eu.vendeli.rethis.types.core/Bool // eu.vendeli.rethis.types.core/Bool.copy|copy(kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/Bool.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/Bool.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/Bool.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/BulkString : eu.vendeli.rethis.types.core/RPrimitive { // eu.vendeli.rethis.types.core/BulkString|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.rethis.types.core/BulkString.<init>|<init>(kotlin.String){}[0]

    final val value // eu.vendeli.rethis.types.core/BulkString.value|{}value[0]
        final fun <get-value>(): kotlin/String // eu.vendeli.rethis.types.core/BulkString.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.core/BulkString.component1|component1(){}[0]
    final fun copy(kotlin/String = ...): eu.vendeli.rethis.types.core/BulkString // eu.vendeli.rethis.types.core/BulkString.copy|copy(kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/BulkString.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/BulkString.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/BulkString.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/ClientConfiguration { // eu.vendeli.rethis.types.core/ClientConfiguration|null[0]
    constructor <init>(kotlin/Int? = ..., io.ktor.utils.io.charsets/Charset = ..., io.ktor.network.tls/TLSConfig? = ..., eu.vendeli.rethis.types.core/AuthConfiguration? = ..., eu.vendeli.rethis.types.core/ConnectionConfiguration = ..., eu.vendeli.rethis.types.core/SocketConfiguration = ...) // eu.vendeli.rethis.types.core/ClientConfiguration.<init>|<init>(kotlin.Int?;io.ktor.utils.io.charsets.Charset;io.ktor.network.tls.TLSConfig?;eu.vendeli.rethis.types.core.AuthConfiguration?;eu.vendeli.rethis.types.core.ConnectionConfiguration;eu.vendeli.rethis.types.core.SocketConfiguration){}[0]

    final var charset // eu.vendeli.rethis.types.core/ClientConfiguration.charset|{}charset[0]
        final fun <get-charset>(): io.ktor.utils.io.charsets/Charset // eu.vendeli.rethis.types.core/ClientConfiguration.charset.<get-charset>|<get-charset>(){}[0]
        final fun <set-charset>(io.ktor.utils.io.charsets/Charset) // eu.vendeli.rethis.types.core/ClientConfiguration.charset.<set-charset>|<set-charset>(io.ktor.utils.io.charsets.Charset){}[0]
    final var db // eu.vendeli.rethis.types.core/ClientConfiguration.db|{}db[0]
        final fun <get-db>(): kotlin/Int? // eu.vendeli.rethis.types.core/ClientConfiguration.db.<get-db>|<get-db>(){}[0]
        final fun <set-db>(kotlin/Int?) // eu.vendeli.rethis.types.core/ClientConfiguration.db.<set-db>|<set-db>(kotlin.Int?){}[0]
    final var tlsConfig // eu.vendeli.rethis.types.core/ClientConfiguration.tlsConfig|{}tlsConfig[0]
        final fun <get-tlsConfig>(): io.ktor.network.tls/TLSConfig? // eu.vendeli.rethis.types.core/ClientConfiguration.tlsConfig.<get-tlsConfig>|<get-tlsConfig>(){}[0]
        final fun <set-tlsConfig>(io.ktor.network.tls/TLSConfig?) // eu.vendeli.rethis.types.core/ClientConfiguration.tlsConfig.<set-tlsConfig>|<set-tlsConfig>(io.ktor.network.tls.TLSConfig?){}[0]

    final fun auth(kotlin/String, kotlin/String? = ...) // eu.vendeli.rethis.types.core/ClientConfiguration.auth|auth(kotlin.String;kotlin.String?){}[0]
    final fun component1(): kotlin/Int? // eu.vendeli.rethis.types.core/ClientConfiguration.component1|component1(){}[0]
    final fun component2(): io.ktor.utils.io.charsets/Charset // eu.vendeli.rethis.types.core/ClientConfiguration.component2|component2(){}[0]
    final fun component3(): io.ktor.network.tls/TLSConfig? // eu.vendeli.rethis.types.core/ClientConfiguration.component3|component3(){}[0]
    final fun connection(kotlin/Function1<eu.vendeli.rethis.types.core/ConnectionConfiguration, kotlin/Unit>) // eu.vendeli.rethis.types.core/ClientConfiguration.connection|connection(kotlin.Function1<eu.vendeli.rethis.types.core.ConnectionConfiguration,kotlin.Unit>){}[0]
    final fun copy(kotlin/Int? = ..., io.ktor.utils.io.charsets/Charset = ..., io.ktor.network.tls/TLSConfig? = ..., eu.vendeli.rethis.types.core/AuthConfiguration? = ..., eu.vendeli.rethis.types.core/ConnectionConfiguration = ..., eu.vendeli.rethis.types.core/SocketConfiguration = ...): eu.vendeli.rethis.types.core/ClientConfiguration // eu.vendeli.rethis.types.core/ClientConfiguration.copy|copy(kotlin.Int?;io.ktor.utils.io.charsets.Charset;io.ktor.network.tls.TLSConfig?;eu.vendeli.rethis.types.core.AuthConfiguration?;eu.vendeli.rethis.types.core.ConnectionConfiguration;eu.vendeli.rethis.types.core.SocketConfiguration){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/ClientConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/ClientConfiguration.hashCode|hashCode(){}[0]
    final fun jsonModule(kotlinx.serialization.json/Json) // eu.vendeli.rethis.types.core/ClientConfiguration.jsonModule|jsonModule(kotlinx.serialization.json.Json){}[0]
    final fun socket(kotlin/Function1<eu.vendeli.rethis.types.core/SocketConfiguration, kotlin/Unit>) // eu.vendeli.rethis.types.core/ClientConfiguration.socket|socket(kotlin.Function1<eu.vendeli.rethis.types.core.SocketConfiguration,kotlin.Unit>){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/ClientConfiguration.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/ConnectionConfiguration { // eu.vendeli.rethis.types.core/ConnectionConfiguration|null[0]
    constructor <init>(kotlin/Int = ..., kotlin/Long = ..., kotlin/Int = ..., kotlinx.coroutines/CoroutineDispatcher = ...) // eu.vendeli.rethis.types.core/ConnectionConfiguration.<init>|<init>(kotlin.Int;kotlin.Long;kotlin.Int;kotlinx.coroutines.CoroutineDispatcher){}[0]

    final var dispatcher // eu.vendeli.rethis.types.core/ConnectionConfiguration.dispatcher|{}dispatcher[0]
        final fun <get-dispatcher>(): kotlinx.coroutines/CoroutineDispatcher // eu.vendeli.rethis.types.core/ConnectionConfiguration.dispatcher.<get-dispatcher>|<get-dispatcher>(){}[0]
        final fun <set-dispatcher>(kotlinx.coroutines/CoroutineDispatcher) // eu.vendeli.rethis.types.core/ConnectionConfiguration.dispatcher.<set-dispatcher>|<set-dispatcher>(kotlinx.coroutines.CoroutineDispatcher){}[0]
    final var poolSize // eu.vendeli.rethis.types.core/ConnectionConfiguration.poolSize|{}poolSize[0]
        final fun <get-poolSize>(): kotlin/Int // eu.vendeli.rethis.types.core/ConnectionConfiguration.poolSize.<get-poolSize>|<get-poolSize>(){}[0]
        final fun <set-poolSize>(kotlin/Int) // eu.vendeli.rethis.types.core/ConnectionConfiguration.poolSize.<set-poolSize>|<set-poolSize>(kotlin.Int){}[0]
    final var reconnectAttempts // eu.vendeli.rethis.types.core/ConnectionConfiguration.reconnectAttempts|{}reconnectAttempts[0]
        final fun <get-reconnectAttempts>(): kotlin/Int // eu.vendeli.rethis.types.core/ConnectionConfiguration.reconnectAttempts.<get-reconnectAttempts>|<get-reconnectAttempts>(){}[0]
        final fun <set-reconnectAttempts>(kotlin/Int) // eu.vendeli.rethis.types.core/ConnectionConfiguration.reconnectAttempts.<set-reconnectAttempts>|<set-reconnectAttempts>(kotlin.Int){}[0]
    final var reconnectDelay // eu.vendeli.rethis.types.core/ConnectionConfiguration.reconnectDelay|{}reconnectDelay[0]
        final fun <get-reconnectDelay>(): kotlin/Long // eu.vendeli.rethis.types.core/ConnectionConfiguration.reconnectDelay.<get-reconnectDelay>|<get-reconnectDelay>(){}[0]
        final fun <set-reconnectDelay>(kotlin/Long) // eu.vendeli.rethis.types.core/ConnectionConfiguration.reconnectDelay.<set-reconnectDelay>|<set-reconnectDelay>(kotlin.Long){}[0]

    final fun component1(): kotlin/Int // eu.vendeli.rethis.types.core/ConnectionConfiguration.component1|component1(){}[0]
    final fun component2(): kotlin/Long // eu.vendeli.rethis.types.core/ConnectionConfiguration.component2|component2(){}[0]
    final fun component3(): kotlin/Int // eu.vendeli.rethis.types.core/ConnectionConfiguration.component3|component3(){}[0]
    final fun component4(): kotlinx.coroutines/CoroutineDispatcher // eu.vendeli.rethis.types.core/ConnectionConfiguration.component4|component4(){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Long = ..., kotlin/Int = ..., kotlinx.coroutines/CoroutineDispatcher = ...): eu.vendeli.rethis.types.core/ConnectionConfiguration // eu.vendeli.rethis.types.core/ConnectionConfiguration.copy|copy(kotlin.Int;kotlin.Long;kotlin.Int;kotlinx.coroutines.CoroutineDispatcher){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/ConnectionConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/ConnectionConfiguration.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/ConnectionConfiguration.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/F64 : eu.vendeli.rethis.types.core/RPrimitive { // eu.vendeli.rethis.types.core/F64|null[0]
    constructor <init>(kotlin/Double) // eu.vendeli.rethis.types.core/F64.<init>|<init>(kotlin.Double){}[0]

    final val value // eu.vendeli.rethis.types.core/F64.value|{}value[0]
        final fun <get-value>(): kotlin/Double // eu.vendeli.rethis.types.core/F64.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin/Double // eu.vendeli.rethis.types.core/F64.component1|component1(){}[0]
    final fun copy(kotlin/Double = ...): eu.vendeli.rethis.types.core/F64 // eu.vendeli.rethis.types.core/F64.copy|copy(kotlin.Double){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/F64.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/F64.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/F64.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/Host : eu.vendeli.rethis.types.core/Address { // eu.vendeli.rethis.types.core/Host|null[0]
    constructor <init>(kotlin/String, kotlin/Int) // eu.vendeli.rethis.types.core/Host.<init>|<init>(kotlin.String;kotlin.Int){}[0]
}

final class eu.vendeli.rethis.types.core/Int64 : eu.vendeli.rethis.types.core/RPrimitive { // eu.vendeli.rethis.types.core/Int64|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.core/Int64.<init>|<init>(kotlin.Long){}[0]

    final val value // eu.vendeli.rethis.types.core/Int64.value|{}value[0]
        final fun <get-value>(): kotlin/Long // eu.vendeli.rethis.types.core/Int64.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin/Long // eu.vendeli.rethis.types.core/Int64.component1|component1(){}[0]
    final fun copy(kotlin/Long = ...): eu.vendeli.rethis.types.core/Int64 // eu.vendeli.rethis.types.core/Int64.copy|copy(kotlin.Long){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/Int64.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/Int64.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/Int64.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/PlainString : eu.vendeli.rethis.types.core/RPrimitive { // eu.vendeli.rethis.types.core/PlainString|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.rethis.types.core/PlainString.<init>|<init>(kotlin.String){}[0]

    final val value // eu.vendeli.rethis.types.core/PlainString.value|{}value[0]
        final fun <get-value>(): kotlin/String // eu.vendeli.rethis.types.core/PlainString.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.core/PlainString.component1|component1(){}[0]
    final fun copy(kotlin/String = ...): eu.vendeli.rethis.types.core/PlainString // eu.vendeli.rethis.types.core/PlainString.copy|copy(kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/PlainString.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/PlainString.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/PlainString.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/Push : eu.vendeli.rethis.types.core/RType { // eu.vendeli.rethis.types.core/Push|null[0]
    constructor <init>(kotlin.collections/List<eu.vendeli.rethis.types.core/RPrimitive>) // eu.vendeli.rethis.types.core/Push.<init>|<init>(kotlin.collections.List<eu.vendeli.rethis.types.core.RPrimitive>){}[0]

    final val value // eu.vendeli.rethis.types.core/Push.value|{}value[0]
        final fun <get-value>(): kotlin.collections/List<eu.vendeli.rethis.types.core/RPrimitive> // eu.vendeli.rethis.types.core/Push.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin.collections/List<eu.vendeli.rethis.types.core/RPrimitive> // eu.vendeli.rethis.types.core/Push.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<eu.vendeli.rethis.types.core/RPrimitive> = ...): eu.vendeli.rethis.types.core/Push // eu.vendeli.rethis.types.core/Push.copy|copy(kotlin.collections.List<eu.vendeli.rethis.types.core.RPrimitive>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/Push.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/Push.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/Push.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/RArray : eu.vendeli.rethis.types.core/RType { // eu.vendeli.rethis.types.core/RArray|null[0]
    constructor <init>(kotlin.collections/List<eu.vendeli.rethis.types.core/RType>) // eu.vendeli.rethis.types.core/RArray.<init>|<init>(kotlin.collections.List<eu.vendeli.rethis.types.core.RType>){}[0]

    final val value // eu.vendeli.rethis.types.core/RArray.value|{}value[0]
        final fun <get-value>(): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.types.core/RArray.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.types.core/RArray.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<eu.vendeli.rethis.types.core/RType> = ...): eu.vendeli.rethis.types.core/RArray // eu.vendeli.rethis.types.core/RArray.copy|copy(kotlin.collections.List<eu.vendeli.rethis.types.core.RType>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/RArray.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/RArray.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/RArray.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/RMap : eu.vendeli.rethis.types.core/RType { // eu.vendeli.rethis.types.core/RMap|null[0]
    constructor <init>(kotlin.collections/Map<eu.vendeli.rethis.types.core/RPrimitive, eu.vendeli.rethis.types.core/RType?>) // eu.vendeli.rethis.types.core/RMap.<init>|<init>(kotlin.collections.Map<eu.vendeli.rethis.types.core.RPrimitive,eu.vendeli.rethis.types.core.RType?>){}[0]

    final val value // eu.vendeli.rethis.types.core/RMap.value|{}value[0]
        final fun <get-value>(): kotlin.collections/Map<eu.vendeli.rethis.types.core/RPrimitive, eu.vendeli.rethis.types.core/RType?> // eu.vendeli.rethis.types.core/RMap.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin.collections/Map<eu.vendeli.rethis.types.core/RPrimitive, eu.vendeli.rethis.types.core/RType?> // eu.vendeli.rethis.types.core/RMap.component1|component1(){}[0]
    final fun copy(kotlin.collections/Map<eu.vendeli.rethis.types.core/RPrimitive, eu.vendeli.rethis.types.core/RType?> = ...): eu.vendeli.rethis.types.core/RMap // eu.vendeli.rethis.types.core/RMap.copy|copy(kotlin.collections.Map<eu.vendeli.rethis.types.core.RPrimitive,eu.vendeli.rethis.types.core.RType?>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/RMap.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/RMap.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/RMap.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/RSet : eu.vendeli.rethis.types.core/RType { // eu.vendeli.rethis.types.core/RSet|null[0]
    constructor <init>(kotlin.collections/Set<eu.vendeli.rethis.types.core/RPrimitive>) // eu.vendeli.rethis.types.core/RSet.<init>|<init>(kotlin.collections.Set<eu.vendeli.rethis.types.core.RPrimitive>){}[0]

    final val value // eu.vendeli.rethis.types.core/RSet.value|{}value[0]
        final fun <get-value>(): kotlin.collections/Set<eu.vendeli.rethis.types.core/RPrimitive> // eu.vendeli.rethis.types.core/RSet.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin.collections/Set<eu.vendeli.rethis.types.core/RPrimitive> // eu.vendeli.rethis.types.core/RSet.component1|component1(){}[0]
    final fun copy(kotlin.collections/Set<eu.vendeli.rethis.types.core/RPrimitive> = ...): eu.vendeli.rethis.types.core/RSet // eu.vendeli.rethis.types.core/RSet.copy|copy(kotlin.collections.Set<eu.vendeli.rethis.types.core.RPrimitive>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/RSet.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/RSet.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/RSet.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/SocketConfiguration { // eu.vendeli.rethis.types.core/SocketConfiguration|null[0]
    constructor <init>(kotlin/Long? = ..., kotlin/Int? = ..., kotlin/Boolean = ..., kotlin/Boolean = ...) // eu.vendeli.rethis.types.core/SocketConfiguration.<init>|<init>(kotlin.Long?;kotlin.Int?;kotlin.Boolean;kotlin.Boolean){}[0]

    final var keepAlive // eu.vendeli.rethis.types.core/SocketConfiguration.keepAlive|{}keepAlive[0]
        final fun <get-keepAlive>(): kotlin/Boolean // eu.vendeli.rethis.types.core/SocketConfiguration.keepAlive.<get-keepAlive>|<get-keepAlive>(){}[0]
        final fun <set-keepAlive>(kotlin/Boolean) // eu.vendeli.rethis.types.core/SocketConfiguration.keepAlive.<set-keepAlive>|<set-keepAlive>(kotlin.Boolean){}[0]
    final var linger // eu.vendeli.rethis.types.core/SocketConfiguration.linger|{}linger[0]
        final fun <get-linger>(): kotlin/Int? // eu.vendeli.rethis.types.core/SocketConfiguration.linger.<get-linger>|<get-linger>(){}[0]
        final fun <set-linger>(kotlin/Int?) // eu.vendeli.rethis.types.core/SocketConfiguration.linger.<set-linger>|<set-linger>(kotlin.Int?){}[0]
    final var noDelay // eu.vendeli.rethis.types.core/SocketConfiguration.noDelay|{}noDelay[0]
        final fun <get-noDelay>(): kotlin/Boolean // eu.vendeli.rethis.types.core/SocketConfiguration.noDelay.<get-noDelay>|<get-noDelay>(){}[0]
        final fun <set-noDelay>(kotlin/Boolean) // eu.vendeli.rethis.types.core/SocketConfiguration.noDelay.<set-noDelay>|<set-noDelay>(kotlin.Boolean){}[0]
    final var timeout // eu.vendeli.rethis.types.core/SocketConfiguration.timeout|{}timeout[0]
        final fun <get-timeout>(): kotlin/Long? // eu.vendeli.rethis.types.core/SocketConfiguration.timeout.<get-timeout>|<get-timeout>(){}[0]
        final fun <set-timeout>(kotlin/Long?) // eu.vendeli.rethis.types.core/SocketConfiguration.timeout.<set-timeout>|<set-timeout>(kotlin.Long?){}[0]

    final fun component1(): kotlin/Long? // eu.vendeli.rethis.types.core/SocketConfiguration.component1|component1(){}[0]
    final fun component2(): kotlin/Int? // eu.vendeli.rethis.types.core/SocketConfiguration.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // eu.vendeli.rethis.types.core/SocketConfiguration.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // eu.vendeli.rethis.types.core/SocketConfiguration.component4|component4(){}[0]
    final fun copy(kotlin/Long? = ..., kotlin/Int? = ..., kotlin/Boolean = ..., kotlin/Boolean = ...): eu.vendeli.rethis.types.core/SocketConfiguration // eu.vendeli.rethis.types.core/SocketConfiguration.copy|copy(kotlin.Long?;kotlin.Int?;kotlin.Boolean;kotlin.Boolean){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/SocketConfiguration.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/SocketConfiguration.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/SocketConfiguration.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.core/UnixSocket : eu.vendeli.rethis.types.core/Address { // eu.vendeli.rethis.types.core/UnixSocket|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.rethis.types.core/UnixSocket.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.rethis.types.core/Url : eu.vendeli.rethis.types.core/Address { // eu.vendeli.rethis.types.core/Url|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.rethis.types.core/Url.<init>|<init>(kotlin.String){}[0]
}

final class eu.vendeli.rethis.types.core/VerbatimString : eu.vendeli.rethis.types.core/RPrimitive { // eu.vendeli.rethis.types.core/VerbatimString|null[0]
    constructor <init>(kotlin/String, kotlin/String) // eu.vendeli.rethis.types.core/VerbatimString.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val data // eu.vendeli.rethis.types.core/VerbatimString.data|{}data[0]
        final fun <get-data>(): kotlin/String // eu.vendeli.rethis.types.core/VerbatimString.data.<get-data>|<get-data>(){}[0]
    final val encoding // eu.vendeli.rethis.types.core/VerbatimString.encoding|{}encoding[0]
        final fun <get-encoding>(): kotlin/String // eu.vendeli.rethis.types.core/VerbatimString.encoding.<get-encoding>|<get-encoding>(){}[0]
    final val value // eu.vendeli.rethis.types.core/VerbatimString.value|{}value[0]
        final fun <get-value>(): kotlin/String // eu.vendeli.rethis.types.core/VerbatimString.value.<get-value>|<get-value>(){}[0]

    final fun component1(): kotlin/String // eu.vendeli.rethis.types.core/VerbatimString.component1|component1(){}[0]
    final fun component2(): kotlin/String // eu.vendeli.rethis.types.core/VerbatimString.component2|component2(){}[0]
    final fun copy(kotlin/String = ..., kotlin/String = ...): eu.vendeli.rethis.types.core/VerbatimString // eu.vendeli.rethis.types.core/VerbatimString.copy|copy(kotlin.String;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/VerbatimString.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/VerbatimString.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/VerbatimString.toString|toString(){}[0]
}

final class eu.vendeli.rethis.types.options/BYBOX : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/Shape { // eu.vendeli.rethis.types.options/BYBOX|null[0]
    constructor <init>(kotlin/Double, kotlin/Double, eu.vendeli.rethis.types.common/GeoUnit) // eu.vendeli.rethis.types.options/BYBOX.<init>|<init>(kotlin.Double;kotlin.Double;eu.vendeli.rethis.types.common.GeoUnit){}[0]

    final val data // eu.vendeli.rethis.types.options/BYBOX.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/BYBOX.data.<get-data>|<get-data>(){}[0]
}

final class eu.vendeli.rethis.types.options/BYRADIUS : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/Shape { // eu.vendeli.rethis.types.options/BYRADIUS|null[0]
    constructor <init>(kotlin/Double, eu.vendeli.rethis.types.common/GeoUnit) // eu.vendeli.rethis.types.options/BYRADIUS.<init>|<init>(kotlin.Double;eu.vendeli.rethis.types.common.GeoUnit){}[0]

    final val data // eu.vendeli.rethis.types.options/BYRADIUS.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/BYRADIUS.data.<get-data>|<get-data>(){}[0]
}

final class eu.vendeli.rethis.types.options/BitOpOption { // eu.vendeli.rethis.types.options/BitOpOption|null[0]
    constructor <init>() // eu.vendeli.rethis.types.options/BitOpOption.<init>|<init>(){}[0]

    final enum class OperationType : kotlin/Enum<eu.vendeli.rethis.types.options/BitOpOption.OperationType> { // eu.vendeli.rethis.types.options/BitOpOption.OperationType|null[0]
        enum entry AND // eu.vendeli.rethis.types.options/BitOpOption.OperationType.AND|null[0]
        enum entry NOT // eu.vendeli.rethis.types.options/BitOpOption.OperationType.NOT|null[0]
        enum entry OR // eu.vendeli.rethis.types.options/BitOpOption.OperationType.OR|null[0]
        enum entry XOR // eu.vendeli.rethis.types.options/BitOpOption.OperationType.XOR|null[0]

        final val entries // eu.vendeli.rethis.types.options/BitOpOption.OperationType.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.rethis.types.options/BitOpOption.OperationType> // eu.vendeli.rethis.types.options/BitOpOption.OperationType.entries.<get-entries>|<get-entries>#static(){}[0]

        final fun valueOf(kotlin/String): eu.vendeli.rethis.types.options/BitOpOption.OperationType // eu.vendeli.rethis.types.options/BitOpOption.OperationType.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<eu.vendeli.rethis.types.options/BitOpOption.OperationType> // eu.vendeli.rethis.types.options/BitOpOption.OperationType.values|values#static(){}[0]
    }
}

final class eu.vendeli.rethis.types.options/FROMLONLAT : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/CenterPoint { // eu.vendeli.rethis.types.options/FROMLONLAT|null[0]
    constructor <init>(kotlin/Double, kotlin/Double) // eu.vendeli.rethis.types.options/FROMLONLAT.<init>|<init>(kotlin.Double;kotlin.Double){}[0]

    final val data // eu.vendeli.rethis.types.options/FROMLONLAT.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/FROMLONLAT.data.<get-data>|<get-data>(){}[0]
}

final class eu.vendeli.rethis.types.options/FROMMEMBER : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/CenterPoint { // eu.vendeli.rethis.types.options/FROMMEMBER|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/FROMMEMBER.<init>|<init>(kotlin.String){}[0]

    final val data // eu.vendeli.rethis.types.options/FROMMEMBER.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/FROMMEMBER.data.<get-data>|<get-data>(){}[0]
    final val member // eu.vendeli.rethis.types.options/FROMMEMBER.member|{}member[0]
        final fun <get-member>(): kotlin/String // eu.vendeli.rethis.types.options/FROMMEMBER.member.<get-member>|<get-member>(){}[0]
}

final class eu.vendeli.rethis.types.options/MinMatchLen : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/LcsOptions { // eu.vendeli.rethis.types.options/MinMatchLen|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/MinMatchLen.<init>|<init>(kotlin.Long){}[0]

    final val data // eu.vendeli.rethis.types.options/MinMatchLen.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/MinMatchLen.data.<get-data>|<get-data>(){}[0]
}

final class eu.vendeli.rethis.types.options/XPendingOption : eu.vendeli.rethis.types.core/VaryingArgument { // eu.vendeli.rethis.types.options/XPendingOption|null[0]
    constructor <init>(kotlin/String, kotlin/String, kotlin/Long, kotlin/String? = ..., kotlin/Long? = ...) // eu.vendeli.rethis.types.options/XPendingOption.<init>|<init>(kotlin.String;kotlin.String;kotlin.Long;kotlin.String?;kotlin.Long?){}[0]

    final val data // eu.vendeli.rethis.types.options/XPendingOption.data|{}data[0]
        final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XPendingOption.data.<get-data>|<get-data>(){}[0]
}

final class eu.vendeli.rethis.wrappers/ReThisMap : kotlin.collections/AbstractMutableMap<kotlin/String, kotlin/String> { // eu.vendeli.rethis.wrappers/ReThisMap|null[0]
    constructor <init>(eu.vendeli.rethis/ReThis, kotlin/String) // eu.vendeli.rethis.wrappers/ReThisMap.<init>|<init>(eu.vendeli.rethis.ReThis;kotlin.String){}[0]

    final val entries // eu.vendeli.rethis.wrappers/ReThisMap.entries|{}entries[0]
        final fun <get-entries>(): kotlin.collections/MutableSet<kotlin.collections/MutableMap.MutableEntry<kotlin/String, kotlin/String>> // eu.vendeli.rethis.wrappers/ReThisMap.entries.<get-entries>|<get-entries>(){}[0]
    final val keys // eu.vendeli.rethis.wrappers/ReThisMap.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/MutableSet<kotlin/String> // eu.vendeli.rethis.wrappers/ReThisMap.keys.<get-keys>|<get-keys>(){}[0]
    final val size // eu.vendeli.rethis.wrappers/ReThisMap.size|{}size[0]
        final fun <get-size>(): kotlin/Int // eu.vendeli.rethis.wrappers/ReThisMap.size.<get-size>|<get-size>(){}[0]
    final val values // eu.vendeli.rethis.wrappers/ReThisMap.values|{}values[0]
        final fun <get-values>(): kotlin.collections/MutableCollection<kotlin/String> // eu.vendeli.rethis.wrappers/ReThisMap.values.<get-values>|<get-values>(){}[0]

    final fun clear() // eu.vendeli.rethis.wrappers/ReThisMap.clear|clear(){}[0]
    final fun containsKey(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.wrappers/ReThisMap.containsKey|containsKey(kotlin.String){}[0]
    final fun containsValue(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.wrappers/ReThisMap.containsValue|containsValue(kotlin.String){}[0]
    final fun get(kotlin/String): kotlin/String? // eu.vendeli.rethis.wrappers/ReThisMap.get|get(kotlin.String){}[0]
    final fun isEmpty(): kotlin/Boolean // eu.vendeli.rethis.wrappers/ReThisMap.isEmpty|isEmpty(){}[0]
    final fun put(kotlin/String, kotlin/String): kotlin/String // eu.vendeli.rethis.wrappers/ReThisMap.put|put(kotlin.String;kotlin.String){}[0]
    final fun putAll(kotlin.collections/Map<out kotlin/String, kotlin/String>) // eu.vendeli.rethis.wrappers/ReThisMap.putAll|putAll(kotlin.collections.Map<out|kotlin.String,kotlin.String>){}[0]
    final fun remove(kotlin/String): kotlin/String? // eu.vendeli.rethis.wrappers/ReThisMap.remove|remove(kotlin.String){}[0]
}

final class eu.vendeli.rethis.wrappers/ReThisSet : kotlin.collections/AbstractMutableSet<kotlin/String> { // eu.vendeli.rethis.wrappers/ReThisSet|null[0]
    constructor <init>(eu.vendeli.rethis/ReThis, kotlin/String) // eu.vendeli.rethis.wrappers/ReThisSet.<init>|<init>(eu.vendeli.rethis.ReThis;kotlin.String){}[0]

    final val size // eu.vendeli.rethis.wrappers/ReThisSet.size|{}size[0]
        final fun <get-size>(): kotlin/Int // eu.vendeli.rethis.wrappers/ReThisSet.size.<get-size>|<get-size>(){}[0]

    final fun add(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.wrappers/ReThisSet.add|add(kotlin.String){}[0]
    final fun addAll(kotlin.collections/Collection<kotlin/String>): kotlin/Boolean // eu.vendeli.rethis.wrappers/ReThisSet.addAll|addAll(kotlin.collections.Collection<kotlin.String>){}[0]
    final fun clear() // eu.vendeli.rethis.wrappers/ReThisSet.clear|clear(){}[0]
    final fun contains(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.wrappers/ReThisSet.contains|contains(kotlin.String){}[0]
    final fun isEmpty(): kotlin/Boolean // eu.vendeli.rethis.wrappers/ReThisSet.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/MutableIterator<kotlin/String> // eu.vendeli.rethis.wrappers/ReThisSet.iterator|iterator(){}[0]
    final fun remove(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.wrappers/ReThisSet.remove|remove(kotlin.String){}[0]
}

final class eu.vendeli.rethis/DataProcessingException : eu.vendeli.rethis/ReThisException { // eu.vendeli.rethis/DataProcessingException|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Throwable? = ...) // eu.vendeli.rethis/DataProcessingException.<init>|<init>(kotlin.String?;kotlin.Throwable?){}[0]

    final val cause // eu.vendeli.rethis/DataProcessingException.cause|{}cause[0]
        final fun <get-cause>(): kotlin/Throwable? // eu.vendeli.rethis/DataProcessingException.cause.<get-cause>|<get-cause>(){}[0]
    final val message // eu.vendeli.rethis/DataProcessingException.message|{}message[0]
        final fun <get-message>(): kotlin/String? // eu.vendeli.rethis/DataProcessingException.message.<get-message>|<get-message>(){}[0]
}

final class eu.vendeli.rethis/InvalidStateException : eu.vendeli.rethis/ReThisException { // eu.vendeli.rethis/InvalidStateException|null[0]
    constructor <init>(kotlin/String? = ...) // eu.vendeli.rethis/InvalidStateException.<init>|<init>(kotlin.String?){}[0]

    final val message // eu.vendeli.rethis/InvalidStateException.message|{}message[0]
        final fun <get-message>(): kotlin/String? // eu.vendeli.rethis/InvalidStateException.message.<get-message>|<get-message>(){}[0]
}

final class eu.vendeli.rethis/ReThis { // eu.vendeli.rethis/ReThis|null[0]
    constructor <init>(eu.vendeli.rethis.types.core/Address = ..., eu.vendeli.rethis.types.core/RespVer = ..., kotlin/Function1<eu.vendeli.rethis.types.core/ClientConfiguration, kotlin/Unit> = ...) // eu.vendeli.rethis/ReThis.<init>|<init>(eu.vendeli.rethis.types.core.Address;eu.vendeli.rethis.types.core.RespVer;kotlin.Function1<eu.vendeli.rethis.types.core.ClientConfiguration,kotlin.Unit>){}[0]
    constructor <init>(kotlin/String = ..., kotlin/Int = ..., eu.vendeli.rethis.types.core/RespVer = ..., kotlin/Function1<eu.vendeli.rethis.types.core/ClientConfiguration, kotlin/Unit> = ...) // eu.vendeli.rethis/ReThis.<init>|<init>(kotlin.String;kotlin.Int;eu.vendeli.rethis.types.core.RespVer;kotlin.Function1<eu.vendeli.rethis.types.core.ClientConfiguration,kotlin.Unit>){}[0]

    final val isDisconnected // eu.vendeli.rethis/ReThis.isDisconnected|{}isDisconnected[0]
        final fun <get-isDisconnected>(): kotlin/Boolean // eu.vendeli.rethis/ReThis.isDisconnected.<get-isDisconnected>|<get-isDisconnected>(){}[0]
    final val protocol // eu.vendeli.rethis/ReThis.protocol|{}protocol[0]
        final fun <get-protocol>(): eu.vendeli.rethis.types.core/RespVer // eu.vendeli.rethis/ReThis.protocol.<get-protocol>|<get-protocol>(){}[0]
    final val subscriptions // eu.vendeli.rethis/ReThis.subscriptions|{}subscriptions[0]
        final fun <get-subscriptions>(): eu.vendeli.rethis.types.core/ActiveSubscriptions // eu.vendeli.rethis/ReThis.subscriptions.<get-subscriptions>|<get-subscriptions>(){}[0]

    final fun disconnect() // eu.vendeli.rethis/ReThis.disconnect|disconnect(){}[0]
    final fun reconnect() // eu.vendeli.rethis/ReThis.reconnect|reconnect(){}[0]
    final fun shutdown() // eu.vendeli.rethis/ReThis.shutdown|shutdown(){}[0]
    final suspend fun <#A1: kotlin/Any, #B1: kotlin/Any> execute(kotlin.collections/List<eu.vendeli.rethis.types.core/Argument>, io.ktor.util.reflect/TypeInfo, io.ktor.util.reflect/TypeInfo, kotlinx.serialization.json/Json? = ...): kotlin.collections/Map<#A1, #B1>? // eu.vendeli.rethis/ReThis.execute|execute(kotlin.collections.List<eu.vendeli.rethis.types.core.Argument>;io.ktor.util.reflect.TypeInfo;io.ktor.util.reflect.TypeInfo;kotlinx.serialization.json.Json?){0§<kotlin.Any>;1§<kotlin.Any>}[0]
    final suspend fun <#A1: kotlin/Any> execute(kotlin.collections/List<eu.vendeli.rethis.types.core/Argument>, io.ktor.util.reflect/TypeInfo, kotlin/Boolean = ..., kotlinx.serialization.json/Json? = ...): kotlin.collections/List<#A1>? // eu.vendeli.rethis/ReThis.execute|execute(kotlin.collections.List<eu.vendeli.rethis.types.core.Argument>;io.ktor.util.reflect.TypeInfo;kotlin.Boolean;kotlinx.serialization.json.Json?){0§<kotlin.Any>}[0]
    final suspend fun <#A1: kotlin/Any> execute(kotlin.collections/List<eu.vendeli.rethis.types.core/Argument>, io.ktor.util.reflect/TypeInfo, kotlinx.serialization.json/Json? = ...): #A1? // eu.vendeli.rethis/ReThis.execute|execute(kotlin.collections.List<eu.vendeli.rethis.types.core.Argument>;io.ktor.util.reflect.TypeInfo;kotlinx.serialization.json.Json?){0§<kotlin.Any>}[0]
    final suspend fun execute(kotlin.collections/List<eu.vendeli.rethis.types.core/Argument>, kotlin/Unit? = ...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis/ReThis.execute|execute(kotlin.collections.List<eu.vendeli.rethis.types.core.Argument>;kotlin.Unit?){}[0]
    final suspend fun pipeline(kotlin.coroutines/SuspendFunction1<eu.vendeli.rethis/ReThis, kotlin/Unit>): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis/ReThis.pipeline|pipeline(kotlin.coroutines.SuspendFunction1<eu.vendeli.rethis.ReThis,kotlin.Unit>){}[0]
    final suspend fun transaction(kotlin.coroutines/SuspendFunction1<eu.vendeli.rethis/ReThis, kotlin/Unit>): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis/ReThis.transaction|transaction(kotlin.coroutines.SuspendFunction1<eu.vendeli.rethis.ReThis,kotlin.Unit>){}[0]
}

final class eu.vendeli.rethis/RedisError : eu.vendeli.rethis/ReThisException { // eu.vendeli.rethis/RedisError|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Boolean = ...) // eu.vendeli.rethis/RedisError.<init>|<init>(kotlin.String?;kotlin.Boolean){}[0]

    final val isBulk // eu.vendeli.rethis/RedisError.isBulk|{}isBulk[0]
        final fun <get-isBulk>(): kotlin/Boolean // eu.vendeli.rethis/RedisError.isBulk.<get-isBulk>|<get-isBulk>(){}[0]
    final val message // eu.vendeli.rethis/RedisError.message|{}message[0]
        final fun <get-message>(): kotlin/String? // eu.vendeli.rethis/RedisError.message.<get-message>|<get-message>(){}[0]
}

final class eu.vendeli.rethis/ResponseParsingException : eu.vendeli.rethis/ReThisException { // eu.vendeli.rethis/ResponseParsingException|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Throwable? = ...) // eu.vendeli.rethis/ResponseParsingException.<init>|<init>(kotlin.String?;kotlin.Throwable?){}[0]

    final val cause // eu.vendeli.rethis/ResponseParsingException.cause|{}cause[0]
        final fun <get-cause>(): kotlin/Throwable? // eu.vendeli.rethis/ResponseParsingException.cause.<get-cause>|<get-cause>(){}[0]
    final val message // eu.vendeli.rethis/ResponseParsingException.message|{}message[0]
        final fun <get-message>(): kotlin/String? // eu.vendeli.rethis/ResponseParsingException.message.<get-message>|<get-message>(){}[0]
}

final value class eu.vendeli.rethis.types.core/BaArg : eu.vendeli.rethis.types.core/Argument { // eu.vendeli.rethis.types.core/BaArg|null[0]
    constructor <init>(kotlin/ByteArray) // eu.vendeli.rethis.types.core/BaArg.<init>|<init>(kotlin.ByteArray){}[0]

    final val value // eu.vendeli.rethis.types.core/BaArg.value|{}value[0]
        final fun <get-value>(): kotlin/ByteArray // eu.vendeli.rethis.types.core/BaArg.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/BaArg.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/BaArg.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/BaArg.toString|toString(){}[0]
}

final value class eu.vendeli.rethis.types.core/DoubleArg : eu.vendeli.rethis.types.core/Argument { // eu.vendeli.rethis.types.core/DoubleArg|null[0]
    constructor <init>(kotlin/Double) // eu.vendeli.rethis.types.core/DoubleArg.<init>|<init>(kotlin.Double){}[0]

    final val value // eu.vendeli.rethis.types.core/DoubleArg.value|{}value[0]
        final fun <get-value>(): kotlin/Double // eu.vendeli.rethis.types.core/DoubleArg.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/DoubleArg.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/DoubleArg.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/DoubleArg.toString|toString(){}[0]
}

final value class eu.vendeli.rethis.types.core/IntArg : eu.vendeli.rethis.types.core/Argument { // eu.vendeli.rethis.types.core/IntArg|null[0]
    constructor <init>(kotlin/Int) // eu.vendeli.rethis.types.core/IntArg.<init>|<init>(kotlin.Int){}[0]

    final val value // eu.vendeli.rethis.types.core/IntArg.value|{}value[0]
        final fun <get-value>(): kotlin/Int // eu.vendeli.rethis.types.core/IntArg.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/IntArg.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/IntArg.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/IntArg.toString|toString(){}[0]
}

final value class eu.vendeli.rethis.types.core/LongArg : eu.vendeli.rethis.types.core/Argument { // eu.vendeli.rethis.types.core/LongArg|null[0]
    constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.core/LongArg.<init>|<init>(kotlin.Long){}[0]

    final val value // eu.vendeli.rethis.types.core/LongArg.value|{}value[0]
        final fun <get-value>(): kotlin/Long // eu.vendeli.rethis.types.core/LongArg.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/LongArg.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/LongArg.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/LongArg.toString|toString(){}[0]
}

final value class eu.vendeli.rethis.types.core/StringArg : eu.vendeli.rethis.types.core/Argument { // eu.vendeli.rethis.types.core/StringArg|null[0]
    constructor <init>(kotlin/String) // eu.vendeli.rethis.types.core/StringArg.<init>|<init>(kotlin.String){}[0]

    final val value // eu.vendeli.rethis.types.core/StringArg.value|{}value[0]
        final fun <get-value>(): kotlin/String // eu.vendeli.rethis.types.core/StringArg.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/StringArg.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/StringArg.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/StringArg.toString|toString(){}[0]
}

open class eu.vendeli.rethis/ReThisException : kotlin/RuntimeException { // eu.vendeli.rethis/ReThisException|null[0]
    constructor <init>(kotlin/String? = ..., kotlin/Throwable? = ...) // eu.vendeli.rethis/ReThisException.<init>|<init>(kotlin.String?;kotlin.Throwable?){}[0]

    open val cause // eu.vendeli.rethis/ReThisException.cause|{}cause[0]
        open fun <get-cause>(): kotlin/Throwable? // eu.vendeli.rethis/ReThisException.cause.<get-cause>|<get-cause>(){}[0]
    open val message // eu.vendeli.rethis/ReThisException.message|{}message[0]
        open fun <get-message>(): kotlin/String? // eu.vendeli.rethis/ReThisException.message.<get-message>|<get-message>(){}[0]
}

sealed class eu.vendeli.rethis.types.core/Address { // eu.vendeli.rethis.types.core/Address|null[0]
    open fun toString(): kotlin/String // eu.vendeli.rethis.types.core/Address.toString|toString(){}[0]
}

sealed class eu.vendeli.rethis.types.core/RPrimitive : eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.types.core/RPrimitive|null[0]

sealed class eu.vendeli.rethis.types.core/RType { // eu.vendeli.rethis.types.core/RType|null[0]
    open val value // eu.vendeli.rethis.types.core/RType.value|{}value[0]
        open fun <get-value>(): kotlin/Any? // eu.vendeli.rethis.types.core/RType.value.<get-value>|<get-value>(){}[0]

    final class Error : eu.vendeli.rethis.types.core/RType { // eu.vendeli.rethis.types.core/RType.Error|null[0]
        constructor <init>(eu.vendeli.rethis/RedisError) // eu.vendeli.rethis.types.core/RType.Error.<init>|<init>(eu.vendeli.rethis.RedisError){}[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.core/RType.Error.<init>|<init>(kotlin.String){}[0]

        final val exception // eu.vendeli.rethis.types.core/RType.Error.exception|{}exception[0]
            final fun <get-exception>(): eu.vendeli.rethis/RedisError // eu.vendeli.rethis.types.core/RType.Error.exception.<get-exception>|<get-exception>(){}[0]

        final fun component1(): eu.vendeli.rethis/RedisError // eu.vendeli.rethis.types.core/RType.Error.component1|component1(){}[0]
        final fun copy(eu.vendeli.rethis/RedisError = ...): eu.vendeli.rethis.types.core/RType.Error // eu.vendeli.rethis.types.core/RType.Error.copy|copy(eu.vendeli.rethis.RedisError){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/RType.Error.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/RType.Error.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/RType.Error.toString|toString(){}[0]
    }

    final class Raw : eu.vendeli.rethis.types.core/RType { // eu.vendeli.rethis.types.core/RType.Raw|null[0]
        final val value // eu.vendeli.rethis.types.core/RType.Raw.value|{}value[0]
            final fun <get-value>(): kotlin/ByteArray // eu.vendeli.rethis.types.core/RType.Raw.value.<get-value>|<get-value>(){}[0]
    }

    final object Null : eu.vendeli.rethis.types.core/RType { // eu.vendeli.rethis.types.core/RType.Null|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/RType.Null.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/RType.Null.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/RType.Null.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.core/RespVer { // eu.vendeli.rethis.types.core/RespVer|null[0]
    final val literal // eu.vendeli.rethis.types.core/RespVer.literal|{}literal[0]
        final fun <get-literal>(): kotlin/Int // eu.vendeli.rethis.types.core/RespVer.literal.<get-literal>|<get-literal>(){}[0]

    final object V2 : eu.vendeli.rethis.types.core/RespVer { // eu.vendeli.rethis.types.core/RespVer.V2|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/RespVer.V2.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/RespVer.V2.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/RespVer.V2.toString|toString(){}[0]
    }

    final object V3 : eu.vendeli.rethis.types.core/RespVer { // eu.vendeli.rethis.types.core/RespVer.V3|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.core/RespVer.V3.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.core/RespVer.V3.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.core/RespVer.V3.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/BitcountOption { // eu.vendeli.rethis.types.options/BitcountOption|null[0]
    final class Range : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/BitcountOption { // eu.vendeli.rethis.types.options/BitcountOption.Range|null[0]
        constructor <init>(kotlin/Int, kotlin/Int) // eu.vendeli.rethis.types.options/BitcountOption.Range.<init>|<init>(kotlin.Int;kotlin.Int){}[0]

        final val data // eu.vendeli.rethis.types.options/BitcountOption.Range.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/BitcountOption.Range.data.<get-data>|<get-data>(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/BitfieldOption { // eu.vendeli.rethis.types.options/BitfieldOption|null[0]
    final class GET : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/BitfieldOption { // eu.vendeli.rethis.types.options/BitfieldOption.GET|null[0]
        constructor <init>(kotlin/String, kotlin/Long) // eu.vendeli.rethis.types.options/BitfieldOption.GET.<init>|<init>(kotlin.String;kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/BitfieldOption.GET.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/BitfieldOption.GET.data.<get-data>|<get-data>(){}[0]
    }

    final class INCRBY : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/BitfieldOption { // eu.vendeli.rethis.types.options/BitfieldOption.INCRBY|null[0]
        constructor <init>(kotlin/String, kotlin/Long, kotlin/Long) // eu.vendeli.rethis.types.options/BitfieldOption.INCRBY.<init>|<init>(kotlin.String;kotlin.Long;kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/BitfieldOption.INCRBY.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/BitfieldOption.INCRBY.data.<get-data>|<get-data>(){}[0]
    }

    final class OVERFLOW : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/BitfieldOption { // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW|null[0]
        constructor <init>(eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type) // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.<init>|<init>(eu.vendeli.rethis.types.options.BitfieldOption.OVERFLOW.Type){}[0]

        final val data // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.data.<get-data>|<get-data>(){}[0]

        final enum class Type : kotlin/Enum<eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type> { // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type|null[0]
            enum entry FAIL // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type.FAIL|null[0]
            enum entry SAT // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type.SAT|null[0]
            enum entry WRAP // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type.WRAP|null[0]

            final val entries // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type.entries|#static{}entries[0]
                final fun <get-entries>(): kotlin.enums/EnumEntries<eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type> // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type.entries.<get-entries>|<get-entries>#static(){}[0]

            final fun valueOf(kotlin/String): eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type.valueOf|valueOf#static(kotlin.String){}[0]
            final fun values(): kotlin/Array<eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type> // eu.vendeli.rethis.types.options/BitfieldOption.OVERFLOW.Type.values|values#static(){}[0]
        }
    }

    final class SET : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/BitfieldOption { // eu.vendeli.rethis.types.options/BitfieldOption.SET|null[0]
        constructor <init>(kotlin/String, kotlin/Long, kotlin/Long) // eu.vendeli.rethis.types.options/BitfieldOption.SET.<init>|<init>(kotlin.String;kotlin.Long;kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/BitfieldOption.SET.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/BitfieldOption.SET.data.<get-data>|<get-data>(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/CenterPoint : eu.vendeli.rethis.types.options/GeoSearchOption // eu.vendeli.rethis.types.options/CenterPoint|null[0]

sealed class eu.vendeli.rethis.types.options/CopyOption { // eu.vendeli.rethis.types.options/CopyOption|null[0]
    final class DB : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/CopyOption { // eu.vendeli.rethis.types.options/CopyOption.DB|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/CopyOption.DB.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/CopyOption.DB.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/CopyOption.DB.data.<get-data>|<get-data>(){}[0]
    }

    final object REPLACE : eu.vendeli.rethis.types.options/CopyOption { // eu.vendeli.rethis.types.options/CopyOption.REPLACE|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/CopyOption.REPLACE.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/CopyOption.REPLACE.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/CopyOption.REPLACE.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/Exactement : eu.vendeli.rethis.types.options/XOption // eu.vendeli.rethis.types.options/Exactement|null[0]

sealed class eu.vendeli.rethis.types.options/FunctionRestoreOption { // eu.vendeli.rethis.types.options/FunctionRestoreOption|null[0]
    final object APPEND : eu.vendeli.rethis.types.options/FunctionRestoreOption { // eu.vendeli.rethis.types.options/FunctionRestoreOption.APPEND|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/FunctionRestoreOption.APPEND.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/FunctionRestoreOption.APPEND.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/FunctionRestoreOption.APPEND.toString|toString(){}[0]
    }

    final object FLUSH : eu.vendeli.rethis.types.options/FunctionRestoreOption { // eu.vendeli.rethis.types.options/FunctionRestoreOption.FLUSH|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/FunctionRestoreOption.FLUSH.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/FunctionRestoreOption.FLUSH.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/FunctionRestoreOption.FLUSH.toString|toString(){}[0]
    }

    final object REPLACE : eu.vendeli.rethis.types.options/FunctionRestoreOption { // eu.vendeli.rethis.types.options/FunctionRestoreOption.REPLACE|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/FunctionRestoreOption.REPLACE.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/FunctionRestoreOption.REPLACE.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/FunctionRestoreOption.REPLACE.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/GeoAddOption { // eu.vendeli.rethis.types.options/GeoAddOption|null[0]
    sealed class UpsertMode : eu.vendeli.rethis.types.options/GeoAddOption // eu.vendeli.rethis.types.options/GeoAddOption.UpsertMode|null[0]

    final object NX : eu.vendeli.rethis.types.options/GeoAddOption.UpsertMode { // eu.vendeli.rethis.types.options/GeoAddOption.NX|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/GeoAddOption.NX.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/GeoAddOption.NX.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/GeoAddOption.NX.toString|toString(){}[0]
    }

    final object XX : eu.vendeli.rethis.types.options/GeoAddOption.UpsertMode { // eu.vendeli.rethis.types.options/GeoAddOption.XX|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/GeoAddOption.XX.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/GeoAddOption.XX.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/GeoAddOption.XX.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/GeoSearchOption // eu.vendeli.rethis.types.options/GeoSearchOption|null[0]

sealed class eu.vendeli.rethis.types.options/GetExOption { // eu.vendeli.rethis.types.options/GetExOption|null[0]
    final class EX : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/GetExOption { // eu.vendeli.rethis.types.options/GetExOption.EX|null[0]
        constructor <init>(kotlin.time/Duration) // eu.vendeli.rethis.types.options/GetExOption.EX.<init>|<init>(kotlin.time.Duration){}[0]

        final val data // eu.vendeli.rethis.types.options/GetExOption.EX.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/GetExOption.EX.data.<get-data>|<get-data>(){}[0]
    }

    final class EXAT : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/GetExOption { // eu.vendeli.rethis.types.options/GetExOption.EXAT|null[0]
        constructor <init>(kotlin.time/Duration) // eu.vendeli.rethis.types.options/GetExOption.EXAT.<init>|<init>(kotlin.time.Duration){}[0]

        final val data // eu.vendeli.rethis.types.options/GetExOption.EXAT.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/GetExOption.EXAT.data.<get-data>|<get-data>(){}[0]
    }

    final class PX : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/GetExOption { // eu.vendeli.rethis.types.options/GetExOption.PX|null[0]
        constructor <init>(kotlin.time/Duration) // eu.vendeli.rethis.types.options/GetExOption.PX.<init>|<init>(kotlin.time.Duration){}[0]

        final val data // eu.vendeli.rethis.types.options/GetExOption.PX.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/GetExOption.PX.data.<get-data>|<get-data>(){}[0]
    }

    final class PXAT : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/GetExOption { // eu.vendeli.rethis.types.options/GetExOption.PXAT|null[0]
        constructor <init>(kotlin.time/Duration) // eu.vendeli.rethis.types.options/GetExOption.PXAT.<init>|<init>(kotlin.time.Duration){}[0]

        final val data // eu.vendeli.rethis.types.options/GetExOption.PXAT.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/GetExOption.PXAT.data.<get-data>|<get-data>(){}[0]
    }

    final object Persist : eu.vendeli.rethis.types.options/GetExOption { // eu.vendeli.rethis.types.options/GetExOption.Persist|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/GetExOption.Persist.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/GetExOption.Persist.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/GetExOption.Persist.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/HScanOption { // eu.vendeli.rethis.types.options/HScanOption|null[0]
    final class Count : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/HScanOption { // eu.vendeli.rethis.types.options/HScanOption.Count|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/HScanOption.Count.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/HScanOption.Count.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/HScanOption.Count.data.<get-data>|<get-data>(){}[0]
    }

    final class Match : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/HScanOption { // eu.vendeli.rethis.types.options/HScanOption.Match|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/HScanOption.Match.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/HScanOption.Match.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/HScanOption.Match.data.<get-data>|<get-data>(){}[0]
    }

    final object NOVALUES : eu.vendeli.rethis.types.options/HScanOption { // eu.vendeli.rethis.types.options/HScanOption.NOVALUES|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/HScanOption.NOVALUES.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/HScanOption.NOVALUES.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/HScanOption.NOVALUES.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/LInsertPlace { // eu.vendeli.rethis.types.options/LInsertPlace|null[0]
    final object AFTER : eu.vendeli.rethis.types.options/LInsertPlace { // eu.vendeli.rethis.types.options/LInsertPlace.AFTER|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/LInsertPlace.AFTER.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/LInsertPlace.AFTER.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/LInsertPlace.AFTER.toString|toString(){}[0]
    }

    final object BEFORE : eu.vendeli.rethis.types.options/LInsertPlace { // eu.vendeli.rethis.types.options/LInsertPlace.BEFORE|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/LInsertPlace.BEFORE.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/LInsertPlace.BEFORE.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/LInsertPlace.BEFORE.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/LPosOption { // eu.vendeli.rethis.types.options/LPosOption|null[0]
    final class Count : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/LPosOption { // eu.vendeli.rethis.types.options/LPosOption.Count|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/LPosOption.Count.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/LPosOption.Count.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/LPosOption.Count.data.<get-data>|<get-data>(){}[0]
    }

    final class MaxLen : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/LPosOption.CommonOption { // eu.vendeli.rethis.types.options/LPosOption.MaxLen|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/LPosOption.MaxLen.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/LPosOption.MaxLen.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/LPosOption.MaxLen.data.<get-data>|<get-data>(){}[0]
    }

    final class Rank : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/LPosOption.CommonOption { // eu.vendeli.rethis.types.options/LPosOption.Rank|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/LPosOption.Rank.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/LPosOption.Rank.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/LPosOption.Rank.data.<get-data>|<get-data>(){}[0]
    }

    sealed class CommonOption : eu.vendeli.rethis.types.options/LPosOption // eu.vendeli.rethis.types.options/LPosOption.CommonOption|null[0]
}

sealed class eu.vendeli.rethis.types.options/LcsMode : eu.vendeli.rethis.types.options/LcsOptions { // eu.vendeli.rethis.types.options/LcsMode|null[0]
    final object IDX : eu.vendeli.rethis.types.options/LcsMode { // eu.vendeli.rethis.types.options/LcsMode.IDX|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/LcsMode.IDX.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/LcsMode.IDX.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/LcsMode.IDX.toString|toString(){}[0]
    }

    final object LEN : eu.vendeli.rethis.types.options/LcsMode { // eu.vendeli.rethis.types.options/LcsMode.LEN|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/LcsMode.LEN.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/LcsMode.LEN.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/LcsMode.LEN.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/LcsOptions // eu.vendeli.rethis.types.options/LcsOptions|null[0]

sealed class eu.vendeli.rethis.types.options/MigrateOption { // eu.vendeli.rethis.types.options/MigrateOption|null[0]
    final class AUTH : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/MigrateOption.Authorization { // eu.vendeli.rethis.types.options/MigrateOption.AUTH|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/MigrateOption.AUTH.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/MigrateOption.AUTH.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/MigrateOption.AUTH.data.<get-data>|<get-data>(){}[0]
    }

    final class AUTH2 : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/MigrateOption.Authorization { // eu.vendeli.rethis.types.options/MigrateOption.AUTH2|null[0]
        constructor <init>(kotlin/String, kotlin/String) // eu.vendeli.rethis.types.options/MigrateOption.AUTH2.<init>|<init>(kotlin.String;kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/MigrateOption.AUTH2.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/MigrateOption.AUTH2.data.<get-data>|<get-data>(){}[0]
    }

    final class KEYS : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/MigrateOption { // eu.vendeli.rethis.types.options/MigrateOption.KEYS|null[0]
        constructor <init>(kotlin/Array<out kotlin/String>...) // eu.vendeli.rethis.types.options/MigrateOption.KEYS.<init>|<init>(kotlin.Array<out|kotlin.String>...){}[0]

        final val data // eu.vendeli.rethis.types.options/MigrateOption.KEYS.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/MigrateOption.KEYS.data.<get-data>|<get-data>(){}[0]
    }

    sealed class Authorization : eu.vendeli.rethis.types.options/MigrateOption // eu.vendeli.rethis.types.options/MigrateOption.Authorization|null[0]

    sealed class Strategy : eu.vendeli.rethis.types.options/MigrateOption // eu.vendeli.rethis.types.options/MigrateOption.Strategy|null[0]

    final object COPY : eu.vendeli.rethis.types.options/MigrateOption.Strategy { // eu.vendeli.rethis.types.options/MigrateOption.COPY|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/MigrateOption.COPY.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/MigrateOption.COPY.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/MigrateOption.COPY.toString|toString(){}[0]
    }

    final object REPLACE : eu.vendeli.rethis.types.options/MigrateOption.Strategy { // eu.vendeli.rethis.types.options/MigrateOption.REPLACE|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/MigrateOption.REPLACE.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/MigrateOption.REPLACE.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/MigrateOption.REPLACE.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/RestoreOption { // eu.vendeli.rethis.types.options/RestoreOption|null[0]
    final class FREQ : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/RestoreOption { // eu.vendeli.rethis.types.options/RestoreOption.FREQ|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/RestoreOption.FREQ.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/RestoreOption.FREQ.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/RestoreOption.FREQ.data.<get-data>|<get-data>(){}[0]
    }

    final class IDLETIME : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/RestoreOption { // eu.vendeli.rethis.types.options/RestoreOption.IDLETIME|null[0]
        constructor <init>(kotlin.time/Duration) // eu.vendeli.rethis.types.options/RestoreOption.IDLETIME.<init>|<init>(kotlin.time.Duration){}[0]

        final val data // eu.vendeli.rethis.types.options/RestoreOption.IDLETIME.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/RestoreOption.IDLETIME.data.<get-data>|<get-data>(){}[0]
        final val seconds // eu.vendeli.rethis.types.options/RestoreOption.IDLETIME.seconds|{}seconds[0]
            final fun <get-seconds>(): kotlin.time/Duration // eu.vendeli.rethis.types.options/RestoreOption.IDLETIME.seconds.<get-seconds>|<get-seconds>(){}[0]
    }

    final object ABSTTL : eu.vendeli.rethis.types.options/RestoreOption { // eu.vendeli.rethis.types.options/RestoreOption.ABSTTL|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/RestoreOption.ABSTTL.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/RestoreOption.ABSTTL.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/RestoreOption.ABSTTL.toString|toString(){}[0]
    }

    final object REPLACE : eu.vendeli.rethis.types.options/RestoreOption { // eu.vendeli.rethis.types.options/RestoreOption.REPLACE|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/RestoreOption.REPLACE.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/RestoreOption.REPLACE.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/RestoreOption.REPLACE.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/SScanOption { // eu.vendeli.rethis.types.options/SScanOption|null[0]
    final class COUNT : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SScanOption { // eu.vendeli.rethis.types.options/SScanOption.COUNT|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/SScanOption.COUNT.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/SScanOption.COUNT.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SScanOption.COUNT.data.<get-data>|<get-data>(){}[0]
    }

    final class MATCH : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SScanOption { // eu.vendeli.rethis.types.options/SScanOption.MATCH|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/SScanOption.MATCH.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/SScanOption.MATCH.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SScanOption.MATCH.data.<get-data>|<get-data>(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/ScanOption { // eu.vendeli.rethis.types.options/ScanOption|null[0]
    final class Count : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/ScanOption { // eu.vendeli.rethis.types.options/ScanOption.Count|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/ScanOption.Count.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/ScanOption.Count.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/ScanOption.Count.data.<get-data>|<get-data>(){}[0]
    }

    final class Match : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/ScanOption { // eu.vendeli.rethis.types.options/ScanOption.Match|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/ScanOption.Match.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/ScanOption.Match.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/ScanOption.Match.data.<get-data>|<get-data>(){}[0]
    }

    final class Type : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/ScanOption { // eu.vendeli.rethis.types.options/ScanOption.Type|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/ScanOption.Type.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/ScanOption.Type.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/ScanOption.Type.data.<get-data>|<get-data>(){}[0]
        final val type // eu.vendeli.rethis.types.options/ScanOption.Type.type|{}type[0]
            final fun <get-type>(): kotlin/String // eu.vendeli.rethis.types.options/ScanOption.Type.type.<get-type>|<get-type>(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/SetExpire : eu.vendeli.rethis.types.options/SetOption { // eu.vendeli.rethis.types.options/SetExpire|null[0]
    final class EX : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SetExpire { // eu.vendeli.rethis.types.options/SetExpire.EX|null[0]
        constructor <init>(kotlin.time/Duration) // eu.vendeli.rethis.types.options/SetExpire.EX.<init>|<init>(kotlin.time.Duration){}[0]

        final val data // eu.vendeli.rethis.types.options/SetExpire.EX.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SetExpire.EX.data.<get-data>|<get-data>(){}[0]
    }

    final class EXAT : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SetExpire { // eu.vendeli.rethis.types.options/SetExpire.EXAT|null[0]
        constructor <init>(kotlinx.datetime/Instant) // eu.vendeli.rethis.types.options/SetExpire.EXAT.<init>|<init>(kotlinx.datetime.Instant){}[0]

        final val data // eu.vendeli.rethis.types.options/SetExpire.EXAT.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SetExpire.EXAT.data.<get-data>|<get-data>(){}[0]
    }

    final class PX : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SetExpire { // eu.vendeli.rethis.types.options/SetExpire.PX|null[0]
        constructor <init>(kotlin.time/Duration) // eu.vendeli.rethis.types.options/SetExpire.PX.<init>|<init>(kotlin.time.Duration){}[0]

        final val data // eu.vendeli.rethis.types.options/SetExpire.PX.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SetExpire.PX.data.<get-data>|<get-data>(){}[0]
    }

    final class PXAT : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SetExpire { // eu.vendeli.rethis.types.options/SetExpire.PXAT|null[0]
        constructor <init>(kotlinx.datetime/Instant) // eu.vendeli.rethis.types.options/SetExpire.PXAT.<init>|<init>(kotlinx.datetime.Instant){}[0]

        final val data // eu.vendeli.rethis.types.options/SetExpire.PXAT.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SetExpire.PXAT.data.<get-data>|<get-data>(){}[0]
    }

    final object KEEPTTL : eu.vendeli.rethis.types.options/SetExpire { // eu.vendeli.rethis.types.options/SetExpire.KEEPTTL|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/SetExpire.KEEPTTL.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/SetExpire.KEEPTTL.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/SetExpire.KEEPTTL.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/SetOption // eu.vendeli.rethis.types.options/SetOption|null[0]

sealed class eu.vendeli.rethis.types.options/Shape : eu.vendeli.rethis.types.options/GeoSearchOption // eu.vendeli.rethis.types.options/Shape|null[0]

sealed class eu.vendeli.rethis.types.options/SortOption { // eu.vendeli.rethis.types.options/SortOption|null[0]
    final class BY : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SortOption { // eu.vendeli.rethis.types.options/SortOption.BY|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/SortOption.BY.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/SortOption.BY.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SortOption.BY.data.<get-data>|<get-data>(){}[0]
    }

    final class GET : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SortOption { // eu.vendeli.rethis.types.options/SortOption.GET|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/SortOption.GET.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/SortOption.GET.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SortOption.GET.data.<get-data>|<get-data>(){}[0]
    }

    final class LIMIT : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SortOption { // eu.vendeli.rethis.types.options/SortOption.LIMIT|null[0]
        constructor <init>(kotlin/Long, kotlin/Long) // eu.vendeli.rethis.types.options/SortOption.LIMIT.<init>|<init>(kotlin.Long;kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/SortOption.LIMIT.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SortOption.LIMIT.data.<get-data>|<get-data>(){}[0]
    }

    final class STORE : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SortOption { // eu.vendeli.rethis.types.options/SortOption.STORE|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/SortOption.STORE.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/SortOption.STORE.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SortOption.STORE.data.<get-data>|<get-data>(){}[0]
    }

    sealed class Order : eu.vendeli.rethis.types.options/SortOption // eu.vendeli.rethis.types.options/SortOption.Order|null[0]

    final object ALPHA : eu.vendeli.rethis.types.options/SortOption { // eu.vendeli.rethis.types.options/SortOption.ALPHA|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/SortOption.ALPHA.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/SortOption.ALPHA.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/SortOption.ALPHA.toString|toString(){}[0]
    }

    final object ASC : eu.vendeli.rethis.types.options/SortOption.Order { // eu.vendeli.rethis.types.options/SortOption.ASC|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/SortOption.ASC.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/SortOption.ASC.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/SortOption.ASC.toString|toString(){}[0]
    }

    final object DESC : eu.vendeli.rethis.types.options/SortOption.Order { // eu.vendeli.rethis.types.options/SortOption.DESC|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/SortOption.DESC.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/SortOption.DESC.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/SortOption.DESC.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/SortRoOption { // eu.vendeli.rethis.types.options/SortRoOption|null[0]
    final class BY : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SortRoOption { // eu.vendeli.rethis.types.options/SortRoOption.BY|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/SortRoOption.BY.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/SortRoOption.BY.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SortRoOption.BY.data.<get-data>|<get-data>(){}[0]
    }

    final class GET : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SortRoOption { // eu.vendeli.rethis.types.options/SortRoOption.GET|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/SortRoOption.GET.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/SortRoOption.GET.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SortRoOption.GET.data.<get-data>|<get-data>(){}[0]
    }

    final class LIMIT : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/SortRoOption { // eu.vendeli.rethis.types.options/SortRoOption.LIMIT|null[0]
        constructor <init>(kotlin/Long, kotlin/Long) // eu.vendeli.rethis.types.options/SortRoOption.LIMIT.<init>|<init>(kotlin.Long;kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/SortRoOption.LIMIT.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/SortRoOption.LIMIT.data.<get-data>|<get-data>(){}[0]
    }

    sealed class Order : eu.vendeli.rethis.types.options/SortRoOption // eu.vendeli.rethis.types.options/SortRoOption.Order|null[0]

    final object ALPHA : eu.vendeli.rethis.types.options/SortRoOption { // eu.vendeli.rethis.types.options/SortRoOption.ALPHA|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/SortRoOption.ALPHA.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/SortRoOption.ALPHA.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/SortRoOption.ALPHA.toString|toString(){}[0]
    }

    final object ASC : eu.vendeli.rethis.types.options/SortRoOption.Order { // eu.vendeli.rethis.types.options/SortRoOption.ASC|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/SortRoOption.ASC.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/SortRoOption.ASC.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/SortRoOption.ASC.toString|toString(){}[0]
    }

    final object DESC : eu.vendeli.rethis.types.options/SortRoOption.Order { // eu.vendeli.rethis.types.options/SortRoOption.DESC|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/SortRoOption.DESC.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/SortRoOption.DESC.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/SortRoOption.DESC.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/TrimmingStrategy : eu.vendeli.rethis.types.options/XOption // eu.vendeli.rethis.types.options/TrimmingStrategy|null[0]

sealed class eu.vendeli.rethis.types.options/UpdateStrategyOption { // eu.vendeli.rethis.types.options/UpdateStrategyOption|null[0]
    sealed class ComparisonRule : eu.vendeli.rethis.types.options/UpdateStrategyOption // eu.vendeli.rethis.types.options/UpdateStrategyOption.ComparisonRule|null[0]

    sealed class ExistenceRule : eu.vendeli.rethis.types.options/UpdateStrategyOption // eu.vendeli.rethis.types.options/UpdateStrategyOption.ExistenceRule|null[0]

    final object GT : eu.vendeli.rethis.types.options/UpdateStrategyOption.ComparisonRule { // eu.vendeli.rethis.types.options/UpdateStrategyOption.GT|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/UpdateStrategyOption.GT.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/UpdateStrategyOption.GT.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/UpdateStrategyOption.GT.toString|toString(){}[0]
    }

    final object LT : eu.vendeli.rethis.types.options/UpdateStrategyOption.ComparisonRule { // eu.vendeli.rethis.types.options/UpdateStrategyOption.LT|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/UpdateStrategyOption.LT.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/UpdateStrategyOption.LT.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/UpdateStrategyOption.LT.toString|toString(){}[0]
    }

    final object NX : eu.vendeli.rethis.types.options/UpdateStrategyOption.ExistenceRule { // eu.vendeli.rethis.types.options/UpdateStrategyOption.NX|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/UpdateStrategyOption.NX.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/UpdateStrategyOption.NX.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/UpdateStrategyOption.NX.toString|toString(){}[0]
    }

    final object XX : eu.vendeli.rethis.types.options/UpdateStrategyOption.ExistenceRule { // eu.vendeli.rethis.types.options/UpdateStrategyOption.XX|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/UpdateStrategyOption.XX.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/UpdateStrategyOption.XX.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/UpdateStrategyOption.XX.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/UpsertMode : eu.vendeli.rethis.types.options/SetOption { // eu.vendeli.rethis.types.options/UpsertMode|null[0]
    final object NX : eu.vendeli.rethis.types.options/UpsertMode { // eu.vendeli.rethis.types.options/UpsertMode.NX|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/UpsertMode.NX.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/UpsertMode.NX.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/UpsertMode.NX.toString|toString(){}[0]
    }

    final object XX : eu.vendeli.rethis.types.options/UpsertMode { // eu.vendeli.rethis.types.options/UpsertMode.XX|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/UpsertMode.XX.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/UpsertMode.XX.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/UpsertMode.XX.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/XAddOption { // eu.vendeli.rethis.types.options/XAddOption|null[0]
    final class Id : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XAddOption.Identifier { // eu.vendeli.rethis.types.options/XAddOption.Id|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/XAddOption.Id.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/XAddOption.Id.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XAddOption.Id.data.<get-data>|<get-data>(){}[0]
    }

    final class Trim : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XAddOption { // eu.vendeli.rethis.types.options/XAddOption.Trim|null[0]
        constructor <init>(eu.vendeli.rethis.types.options/TrimmingStrategy, kotlin/Long, eu.vendeli.rethis.types.options/Exactement? = ..., eu.vendeli.rethis.types.options/XOption.Limit? = ...) // eu.vendeli.rethis.types.options/XAddOption.Trim.<init>|<init>(eu.vendeli.rethis.types.options.TrimmingStrategy;kotlin.Long;eu.vendeli.rethis.types.options.Exactement?;eu.vendeli.rethis.types.options.XOption.Limit?){}[0]

        final val data // eu.vendeli.rethis.types.options/XAddOption.Trim.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XAddOption.Trim.data.<get-data>|<get-data>(){}[0]
    }

    sealed class Identifier : eu.vendeli.rethis.types.options/XAddOption // eu.vendeli.rethis.types.options/XAddOption.Identifier|null[0]

    final object Asterisk : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XAddOption.Identifier { // eu.vendeli.rethis.types.options/XAddOption.Asterisk|null[0]
        final val data // eu.vendeli.rethis.types.options/XAddOption.Asterisk.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XAddOption.Asterisk.data.<get-data>|<get-data>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/XAddOption.Asterisk.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/XAddOption.Asterisk.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/XAddOption.Asterisk.toString|toString(){}[0]
    }

    final object NOMKSTREAM : eu.vendeli.rethis.types.options/XAddOption { // eu.vendeli.rethis.types.options/XAddOption.NOMKSTREAM|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/XAddOption.NOMKSTREAM.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/XAddOption.NOMKSTREAM.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/XAddOption.NOMKSTREAM.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/XClaimOption { // eu.vendeli.rethis.types.options/XClaimOption|null[0]
    final class Idle : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XClaimOption { // eu.vendeli.rethis.types.options/XClaimOption.Idle|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/XClaimOption.Idle.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/XClaimOption.Idle.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XClaimOption.Idle.data.<get-data>|<get-data>(){}[0]
    }

    final class LastId : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XClaimOption { // eu.vendeli.rethis.types.options/XClaimOption.LastId|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/XClaimOption.LastId.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/XClaimOption.LastId.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XClaimOption.LastId.data.<get-data>|<get-data>(){}[0]
    }

    final class RetryCount : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XClaimOption { // eu.vendeli.rethis.types.options/XClaimOption.RetryCount|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/XClaimOption.RetryCount.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/XClaimOption.RetryCount.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XClaimOption.RetryCount.data.<get-data>|<get-data>(){}[0]
    }

    final class Time : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XClaimOption { // eu.vendeli.rethis.types.options/XClaimOption.Time|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/XClaimOption.Time.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/XClaimOption.Time.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XClaimOption.Time.data.<get-data>|<get-data>(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/XId : eu.vendeli.rethis.types.options/XOption { // eu.vendeli.rethis.types.options/XId|null[0]
    final class Id : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XId { // eu.vendeli.rethis.types.options/XId.Id|null[0]
        constructor <init>(kotlin/String) // eu.vendeli.rethis.types.options/XId.Id.<init>|<init>(kotlin.String){}[0]

        final val data // eu.vendeli.rethis.types.options/XId.Id.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XId.Id.data.<get-data>|<get-data>(){}[0]
    }

    final object LastEntry : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XId { // eu.vendeli.rethis.types.options/XId.LastEntry|null[0]
        final val data // eu.vendeli.rethis.types.options/XId.LastEntry.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XId.LastEntry.data.<get-data>|<get-data>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/XId.LastEntry.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/XId.LastEntry.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/XId.LastEntry.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/XOption { // eu.vendeli.rethis.types.options/XOption|null[0]
    final class Limit : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/XOption { // eu.vendeli.rethis.types.options/XOption.Limit|null[0]
        constructor <init>(kotlin/Long) // eu.vendeli.rethis.types.options/XOption.Limit.<init>|<init>(kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/XOption.Limit.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/XOption.Limit.data.<get-data>|<get-data>(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/ZPopCommonOption { // eu.vendeli.rethis.types.options/ZPopCommonOption|null[0]
    final object MAX : eu.vendeli.rethis.types.options/ZPopCommonOption { // eu.vendeli.rethis.types.options/ZPopCommonOption.MAX|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/ZPopCommonOption.MAX.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/ZPopCommonOption.MAX.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/ZPopCommonOption.MAX.toString|toString(){}[0]
    }

    final object MIN : eu.vendeli.rethis.types.options/ZPopCommonOption { // eu.vendeli.rethis.types.options/ZPopCommonOption.MIN|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/ZPopCommonOption.MIN.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/ZPopCommonOption.MIN.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/ZPopCommonOption.MIN.toString|toString(){}[0]
    }
}

sealed class eu.vendeli.rethis.types.options/ZRangeOption { // eu.vendeli.rethis.types.options/ZRangeOption|null[0]
    final class LIMIT : eu.vendeli.rethis.types.core/VaryingArgument, eu.vendeli.rethis.types.options/ZRangeOption { // eu.vendeli.rethis.types.options/ZRangeOption.LIMIT|null[0]
        constructor <init>(kotlin/Long, kotlin/Long) // eu.vendeli.rethis.types.options/ZRangeOption.LIMIT.<init>|<init>(kotlin.Long;kotlin.Long){}[0]

        final val data // eu.vendeli.rethis.types.options/ZRangeOption.LIMIT.data|{}data[0]
            final fun <get-data>(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.options/ZRangeOption.LIMIT.data.<get-data>|<get-data>(){}[0]
    }

    sealed class Type : eu.vendeli.rethis.types.options/ZRangeOption // eu.vendeli.rethis.types.options/ZRangeOption.Type|null[0]

    final object BYLEX : eu.vendeli.rethis.types.options/ZRangeOption.Type { // eu.vendeli.rethis.types.options/ZRangeOption.BYLEX|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/ZRangeOption.BYLEX.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/ZRangeOption.BYLEX.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/ZRangeOption.BYLEX.toString|toString(){}[0]
    }

    final object BYSCORE : eu.vendeli.rethis.types.options/ZRangeOption.Type { // eu.vendeli.rethis.types.options/ZRangeOption.BYSCORE|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/ZRangeOption.BYSCORE.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/ZRangeOption.BYSCORE.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/ZRangeOption.BYSCORE.toString|toString(){}[0]
    }
}

final object eu.vendeli.rethis.types.options/Approximate : eu.vendeli.rethis.types.options/Exactement { // eu.vendeli.rethis.types.options/Approximate|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/Approximate.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/Approximate.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/Approximate.toString|toString(){}[0]
}

final object eu.vendeli.rethis.types.options/Equal : eu.vendeli.rethis.types.options/Exactement { // eu.vendeli.rethis.types.options/Equal|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/Equal.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/Equal.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/Equal.toString|toString(){}[0]
}

final object eu.vendeli.rethis.types.options/GET : eu.vendeli.rethis.types.options/SetOption { // eu.vendeli.rethis.types.options/GET|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/GET.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/GET.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/GET.toString|toString(){}[0]
}

final object eu.vendeli.rethis.types.options/MAXLEN : eu.vendeli.rethis.types.options/TrimmingStrategy { // eu.vendeli.rethis.types.options/MAXLEN|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/MAXLEN.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/MAXLEN.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/MAXLEN.toString|toString(){}[0]
}

final object eu.vendeli.rethis.types.options/MINID : eu.vendeli.rethis.types.options/TrimmingStrategy { // eu.vendeli.rethis.types.options/MINID|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/MINID.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/MINID.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/MINID.toString|toString(){}[0]
}

final object eu.vendeli.rethis.types.options/WITHMATCHLEN : eu.vendeli.rethis.types.options/LcsOptions { // eu.vendeli.rethis.types.options/WITHMATCHLEN|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // eu.vendeli.rethis.types.options/WITHMATCHLEN.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // eu.vendeli.rethis.types.options/WITHMATCHLEN.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // eu.vendeli.rethis.types.options/WITHMATCHLEN.toString|toString(){}[0]
}

final fun (eu.vendeli.rethis.types.core/RType).eu.vendeli.rethis.utils/isOk(): kotlin/Boolean // eu.vendeli.rethis.utils/isOk|isOk@eu.vendeli.rethis.types.core.RType(){}[0]
final fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.utils/__jsonModule(): kotlinx.serialization.json/Json // eu.vendeli.rethis.utils/__jsonModule|__jsonModule@eu.vendeli.rethis.ReThis(){}[0]
final fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.wrappers/Hash(kotlin/String): eu.vendeli.rethis.wrappers/ReThisMap // eu.vendeli.rethis.wrappers/Hash|Hash@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.wrappers/Set(kotlin/String): eu.vendeli.rethis.wrappers/ReThisSet // eu.vendeli.rethis.wrappers/Set|Set@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final fun (kotlin/String).eu.vendeli.rethis.types.core/toArgument(): eu.vendeli.rethis.types.core/StringArg // eu.vendeli.rethis.types.core/toArgument|toArgument@kotlin.String(){}[0]
final fun <#A: kotlin/Any> (eu.vendeli.rethis.types.core/RType).eu.vendeli.rethis.utils/unwrapType(kotlin.reflect/KClass<#A>): #A? // eu.vendeli.rethis.utils/unwrapType|unwrapType@eu.vendeli.rethis.types.core.RType(kotlin.reflect.KClass<0:0>){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any?, #B: eu.vendeli.rethis.types.core/Argument> (kotlin.collections/MutableList<#B>).eu.vendeli.rethis.utils/writeArgument(#A): kotlin.collections/MutableList<#B> // eu.vendeli.rethis.utils/writeArgument|writeArgument@kotlin.collections.MutableList<0:1>(0:0){0§<kotlin.Any?>;1§<eu.vendeli.rethis.types.core.Argument>}[0]
final inline fun (kotlin.collections/List<kotlin/Any>).eu.vendeli.rethis.types.core/toArgument(): kotlin.collections/List<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.core/toArgument|toArgument@kotlin.collections.List<kotlin.Any>(){}[0]
final inline fun (kotlin/Any).eu.vendeli.rethis.types.core/toArgument(): eu.vendeli.rethis.types.core/Argument // eu.vendeli.rethis.types.core/toArgument|toArgument@kotlin.Any(){}[0]
final inline fun (kotlin/Array<out kotlin/String>).eu.vendeli.rethis.types.core/toArgument(): kotlin/Array<eu.vendeli.rethis.types.core/Argument> // eu.vendeli.rethis.types.core/toArgument|toArgument@kotlin.Array<out|kotlin.String>(){}[0]
final inline fun (kotlin/ByteArray).eu.vendeli.rethis.types.core/toArgument(): eu.vendeli.rethis.types.core/BaArg // eu.vendeli.rethis.types.core/toArgument|toArgument@kotlin.ByteArray(){}[0]
final inline fun (kotlin/Double).eu.vendeli.rethis.types.core/toArgument(): eu.vendeli.rethis.types.core/DoubleArg // eu.vendeli.rethis.types.core/toArgument|toArgument@kotlin.Double(){}[0]
final inline fun (kotlin/Int).eu.vendeli.rethis.types.core/toArgument(): eu.vendeli.rethis.types.core/IntArg // eu.vendeli.rethis.types.core/toArgument|toArgument@kotlin.Int(){}[0]
final inline fun (kotlin/Long).eu.vendeli.rethis.types.core/toArgument(): eu.vendeli.rethis.types.core/LongArg // eu.vendeli.rethis.types.core/toArgument|toArgument@kotlin.Long(){}[0]
final inline fun <#A: kotlin/Any> (eu.vendeli.rethis.types.core/RType).eu.vendeli.rethis.utils/unwrap(kotlin.reflect/KClass<#A>): #A? // eu.vendeli.rethis.utils/unwrap|unwrap@eu.vendeli.rethis.types.core.RType(kotlin.reflect.KClass<0:0>){0§<kotlin.Any>}[0]
final inline fun <#A: kotlin/Any?, #B: eu.vendeli.rethis.types.core/Argument> (kotlin.collections/MutableList<#B>).eu.vendeli.rethis.utils/writeArgument(kotlin.collections/List<#A>): kotlin.collections/MutableList<#B> // eu.vendeli.rethis.utils/writeArgument|writeArgument@kotlin.collections.MutableList<0:1>(kotlin.collections.List<0:0>){0§<kotlin.Any?>;1§<eu.vendeli.rethis.types.core.Argument>}[0]
final inline fun <#A: kotlin/Any?, #B: eu.vendeli.rethis.types.core/Argument> (kotlin.collections/MutableList<#B>).eu.vendeli.rethis.utils/writeArgument(kotlin/Array<#A>): kotlin.collections/MutableList<#B> // eu.vendeli.rethis.utils/writeArgument|writeArgument@kotlin.collections.MutableList<0:1>(kotlin.Array<0:0>){0§<kotlin.Any?>;1§<eu.vendeli.rethis.types.core.Argument>}[0]
final inline fun <#A: kotlin/Any?, #B: eu.vendeli.rethis.types.core/Argument> (kotlin.collections/MutableList<#B>).eu.vendeli.rethis.utils/writeArgument(kotlin/Array<out #A>...): kotlin.collections/MutableList<#B> // eu.vendeli.rethis.utils/writeArgument|writeArgument@kotlin.collections.MutableList<0:1>(kotlin.Array<out|0:0>...){0§<kotlin.Any?>;1§<eu.vendeli.rethis.types.core.Argument>}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/append(kotlin/String, kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/append|append@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/bitCount(kotlin/String, eu.vendeli.rethis.types.options/BitcountOption.Range? = ..., eu.vendeli.rethis.types.options/BitmapDataType? = ...): kotlin/Long // eu.vendeli.rethis.commands/bitCount|bitCount@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.options.BitcountOption.Range?;eu.vendeli.rethis.types.options.BitmapDataType?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/bitOp(eu.vendeli.rethis.types.options/BitOpOption.OperationType, kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/bitOp|bitOp@eu.vendeli.rethis.ReThis(eu.vendeli.rethis.types.options.BitOpOption.OperationType;kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/bitPos(kotlin/String, kotlin/Long, kotlin/Long? = ..., kotlin/Long? = ..., eu.vendeli.rethis.types.options/BitOpOption.OperationType? = ...): kotlin/Long // eu.vendeli.rethis.commands/bitPos|bitPos@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Long?;kotlin.Long?;eu.vendeli.rethis.types.options.BitOpOption.OperationType?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/bitfield(kotlin/String, kotlin/Array<out eu.vendeli.rethis.types.options/BitfieldOption>...): kotlin.collections/List<kotlin/Long>? // eu.vendeli.rethis.commands/bitfield|bitfield@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|eu.vendeli.rethis.types.options.BitfieldOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/bitfieldRO(kotlin/String, kotlin/Array<out eu.vendeli.rethis.types.options/BitfieldOption.GET>...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/bitfieldRO|bitfieldRO@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|eu.vendeli.rethis.types.options.BitfieldOption.GET>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/blMove(kotlin/String, kotlin/String, eu.vendeli.rethis.types.common/MoveDirection, eu.vendeli.rethis.types.common/MoveDirection, kotlin/Long): kotlin/String? // eu.vendeli.rethis.commands/blMove|blMove@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.common.MoveDirection;eu.vendeli.rethis.types.common.MoveDirection;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/blPop(kotlin/Array<out kotlin/String>..., kotlin/Long = ...): eu.vendeli.rethis.types.common/PopResult? // eu.vendeli.rethis.commands/blPop|blPop@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/blmPop(kotlin/Long, kotlin/Array<out kotlin/String>..., eu.vendeli.rethis.types.common/MoveDirection, kotlin/Int? = ...): kotlin.collections/List<eu.vendeli.rethis.types.common/MPopResult> // eu.vendeli.rethis.commands/blmPop|blmPop@eu.vendeli.rethis.ReThis(kotlin.Long;kotlin.Array<out|kotlin.String>...;eu.vendeli.rethis.types.common.MoveDirection;kotlin.Int?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/brPop(kotlin/Long, kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.common/PopResult? // eu.vendeli.rethis.commands/brPop|brPop@eu.vendeli.rethis.ReThis(kotlin.Long;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/bzMPop(kotlin/Double, eu.vendeli.rethis.types.options/ZPopCommonOption, kotlin/Array<out kotlin/String>..., kotlin/Long? = ...): kotlin.collections/List<eu.vendeli.rethis.types.common/MPopResult> // eu.vendeli.rethis.commands/bzMPop|bzMPop@eu.vendeli.rethis.ReThis(kotlin.Double;eu.vendeli.rethis.types.options.ZPopCommonOption;kotlin.Array<out|kotlin.String>...;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/bzPopMax(kotlin/Double, kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.common/ZPopResult? // eu.vendeli.rethis.commands/bzPopMax|bzPopMax@eu.vendeli.rethis.ReThis(kotlin.Double;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/bzPopMin(kotlin/Double, kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.common/ZPopResult? // eu.vendeli.rethis.commands/bzPopMin|bzPopMin@eu.vendeli.rethis.ReThis(kotlin.Double;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/copy(kotlin/String, kotlin/String, kotlin/Array<out eu.vendeli.rethis.types.options/CopyOption>...): kotlin/Boolean // eu.vendeli.rethis.commands/copy|copy@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Array<out|eu.vendeli.rethis.types.options.CopyOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/decr(kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/decr|decr@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/decrBy(kotlin/String, kotlin/Long): kotlin/Long // eu.vendeli.rethis.commands/decrBy|decrBy@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/del(kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/del|del@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/discard(): kotlin/Boolean // eu.vendeli.rethis.commands/discard|discard@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/dump(kotlin/String): kotlin/ByteArray? // eu.vendeli.rethis.commands/dump|dump@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/eval(kotlin/String, kotlin/Long, kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.commands/eval|eval@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/evalRo(kotlin/String, kotlin/Long, kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.commands/evalRo|evalRo@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/evalSha(kotlin/String, kotlin/Long, kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.commands/evalSha|evalSha@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/evalShaRo(kotlin/String, kotlin/Long, kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.commands/evalShaRo|evalShaRo@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/exec(): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/exec|exec@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/exists(kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/exists|exists@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/expire(kotlin/String, kotlin/Long, eu.vendeli.rethis.types.options/UpdateStrategyOption? = ...): kotlin/Boolean // eu.vendeli.rethis.commands/expire|expire@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;eu.vendeli.rethis.types.options.UpdateStrategyOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/expireAt(kotlin/String, kotlinx.datetime/Instant, eu.vendeli.rethis.types.options/UpdateStrategyOption? = ...): kotlin/Boolean // eu.vendeli.rethis.commands/expireAt|expireAt@eu.vendeli.rethis.ReThis(kotlin.String;kotlinx.datetime.Instant;eu.vendeli.rethis.types.options.UpdateStrategyOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/expireTime(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/expireTime|expireTime@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/fcall(kotlin/String, kotlin/Long, kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.commands/fcall|fcall@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/fcallRo(kotlin/String, kotlin/Long, kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.commands/fcallRo|fcallRo@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/functionDelete(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.commands/functionDelete|functionDelete@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/functionDump(): kotlin/ByteArray? // eu.vendeli.rethis.commands/functionDump|functionDump@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/functionFlush(): kotlin/Boolean // eu.vendeli.rethis.commands/functionFlush|functionFlush@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/functionKill(): kotlin/Boolean // eu.vendeli.rethis.commands/functionKill|functionKill@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/functionList(kotlin/String? = ..., kotlin/Boolean = ...): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/functionList|functionList@eu.vendeli.rethis.ReThis(kotlin.String?;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/functionLoad(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/functionLoad|functionLoad@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/functionRestore(kotlin/ByteArray, eu.vendeli.rethis.types.options/FunctionRestoreOption? = ...): kotlin/Boolean // eu.vendeli.rethis.commands/functionRestore|functionRestore@eu.vendeli.rethis.ReThis(kotlin.ByteArray;eu.vendeli.rethis.types.options.FunctionRestoreOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/functionStats(): kotlin.collections/Map<kotlin/String, eu.vendeli.rethis.types.core/RType?>? // eu.vendeli.rethis.commands/functionStats|functionStats@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/geoAdd(kotlin/String, kotlin/Array<out eu.vendeli.rethis.types.common/GeoMember>..., eu.vendeli.rethis.types.options/GeoAddOption.UpsertMode? = ..., kotlin/Boolean = ...): kotlin/Long // eu.vendeli.rethis.commands/geoAdd|geoAdd@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|eu.vendeli.rethis.types.common.GeoMember>...;eu.vendeli.rethis.types.options.GeoAddOption.UpsertMode?;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/geoDist(kotlin/String, kotlin/String, kotlin/String, eu.vendeli.rethis.types.common/GeoUnit? = ...): kotlin/Double? // eu.vendeli.rethis.commands/geoDist|geoDist@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String;eu.vendeli.rethis.types.common.GeoUnit?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/geoHash(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/geoHash|geoHash@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/geoPos(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin.collections/List<eu.vendeli.rethis.types.common/GeoPosition>?> // eu.vendeli.rethis.commands/geoPos|geoPos@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/geoSearch(kotlin/String, eu.vendeli.rethis.types.options/CenterPoint, eu.vendeli.rethis.types.options/Shape, kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Long? = ..., kotlin/Boolean = ..., eu.vendeli.rethis.types.common/GeoSort? = ...): kotlin.collections/List<eu.vendeli.rethis.types.common/GeoSearchResult>? // eu.vendeli.rethis.commands/geoSearch|geoSearch@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.options.CenterPoint;eu.vendeli.rethis.types.options.Shape;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Long?;kotlin.Boolean;eu.vendeli.rethis.types.common.GeoSort?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/geoSearchStore(kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/CenterPoint, eu.vendeli.rethis.types.options/Shape, eu.vendeli.rethis.types.common/GeoSort? = ..., kotlin/Long? = ..., kotlin/Boolean = ..., kotlin/Boolean = ...): kotlin/Long // eu.vendeli.rethis.commands/geoSearchStore|geoSearchStore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.CenterPoint;eu.vendeli.rethis.types.options.Shape;eu.vendeli.rethis.types.common.GeoSort?;kotlin.Long?;kotlin.Boolean;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/get(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/get|get@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/getBit(kotlin/String, kotlin/Long): kotlin/Long // eu.vendeli.rethis.commands/getBit|getBit@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/getDel(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/getDel|getDel@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/getEx(kotlin/String, eu.vendeli.rethis.types.options/GetExOption): kotlin/String? // eu.vendeli.rethis.commands/getEx|getEx@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.options.GetExOption){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/getRange(kotlin/String, kotlin.ranges/LongRange): kotlin/String? // eu.vendeli.rethis.commands/getRange|getRange@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.ranges.LongRange){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/getRange(kotlin/String, kotlin/Long, kotlin/Long): kotlin/String? // eu.vendeli.rethis.commands/getRange|getRange@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hDel(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/hDel|hDel@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hExists(kotlin/String, kotlin/String): kotlin/Boolean // eu.vendeli.rethis.commands/hExists|hExists@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hExpire(kotlin/String, kotlin.time/Duration, kotlin/Array<out kotlin/String>..., eu.vendeli.rethis.types.options/UpdateStrategyOption? = ...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/hExpire|hExpire@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.time.Duration;kotlin.Array<out|kotlin.String>...;eu.vendeli.rethis.types.options.UpdateStrategyOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hExpireAt(kotlin/String, kotlinx.datetime/Instant, kotlin/Array<out kotlin/String>..., eu.vendeli.rethis.types.options/UpdateStrategyOption? = ...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/hExpireAt|hExpireAt@eu.vendeli.rethis.ReThis(kotlin.String;kotlinx.datetime.Instant;kotlin.Array<out|kotlin.String>...;eu.vendeli.rethis.types.options.UpdateStrategyOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hExpireTime(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/hExpireTime|hExpireTime@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hGet(kotlin/String, kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/hGet|hGet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hGetAll(kotlin/String): kotlin.collections/Map<kotlin/String, kotlin/String?>? // eu.vendeli.rethis.commands/hGetAll|hGetAll@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hIncrBy(kotlin/String, kotlin/String, kotlin/Long): kotlin/Long // eu.vendeli.rethis.commands/hIncrBy|hIncrBy@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hIncrByFloat(kotlin/String, kotlin/String, kotlin/Double): kotlin/Double? // eu.vendeli.rethis.commands/hIncrByFloat|hIncrByFloat@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Double){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hKeys(kotlin/String): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/hKeys|hKeys@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hLen(kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/hLen|hLen@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hMGet(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/String?> // eu.vendeli.rethis.commands/hMGet|hMGet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hMSet(kotlin/String, kotlin/Array<out kotlin/Pair<kotlin/String, kotlin/String>>...): kotlin/Boolean // eu.vendeli.rethis.commands/hMSet|hMSet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.Pair<kotlin.String,kotlin.String>>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hPExpire(kotlin/String, kotlin.time/Duration, kotlin/Array<out kotlin/String>..., eu.vendeli.rethis.types.options/UpdateStrategyOption? = ...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/hPExpire|hPExpire@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.time.Duration;kotlin.Array<out|kotlin.String>...;eu.vendeli.rethis.types.options.UpdateStrategyOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hPExpireAt(kotlin/String, kotlinx.datetime/Instant, kotlin/Array<out kotlin/String>..., eu.vendeli.rethis.types.options/UpdateStrategyOption? = ...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/hPExpireAt|hPExpireAt@eu.vendeli.rethis.ReThis(kotlin.String;kotlinx.datetime.Instant;kotlin.Array<out|kotlin.String>...;eu.vendeli.rethis.types.options.UpdateStrategyOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hPExpireTime(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/hPExpireTime|hPExpireTime@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hPTTL(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/hPTTL|hPTTL@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hPersist(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/hPersist|hPersist@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hRandField(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/hRandField|hRandField@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hRandField(kotlin/String, kotlin/Long, kotlin/Boolean = ...): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/hRandField|hRandField@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hScan(kotlin/String, kotlin/Long, kotlin/Array<out eu.vendeli.rethis.types.options/HScanOption>...): eu.vendeli.rethis.types.common/ScanResult<kotlin/Pair<kotlin/String, kotlin/String>> // eu.vendeli.rethis.commands/hScan|hScan@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Array<out|eu.vendeli.rethis.types.options.HScanOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hSet(kotlin/String, kotlin/Array<out kotlin/Pair<kotlin/String, kotlin/String>>...): kotlin/Long? // eu.vendeli.rethis.commands/hSet|hSet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.Pair<kotlin.String,kotlin.String>>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hSetNx(kotlin/String, kotlin/Pair<kotlin/String, kotlin/String>): kotlin/Long? // eu.vendeli.rethis.commands/hSetNx|hSetNx@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Pair<kotlin.String,kotlin.String>){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hStrlen(kotlin/String, kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/hStrlen|hStrlen@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hTTL(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/hTTL|hTTL@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hVals(kotlin/String): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/hVals|hVals@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hello(kotlin/Int = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ...): kotlin.collections/Map<kotlin/String, eu.vendeli.rethis.types.core/RType?>? // eu.vendeli.rethis.commands/hello|hello@eu.vendeli.rethis.ReThis(kotlin.Int;kotlin.String?;kotlin.String?;kotlin.String?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/incr(kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/incr|incr@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/incrBy(kotlin/String, kotlin/Long): kotlin/Long // eu.vendeli.rethis.commands/incrBy|incrBy@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/incrByFloat(kotlin/String, kotlin/Double): kotlin/Double? // eu.vendeli.rethis.commands/incrByFloat|incrByFloat@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Double){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonArrAppend(kotlin/String, kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long? // eu.vendeli.rethis.commands/jsonArrAppend|jsonArrAppend@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonArrIndex(kotlin/String, kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/jsonArrIndex|jsonArrIndex@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonArrInsert(kotlin/String, kotlin/String, kotlin/Long, kotlin/Array<out kotlin/String>...): kotlin/Long? // eu.vendeli.rethis.commands/jsonArrInsert|jsonArrInsert@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Long;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonArrLen(kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/jsonArrLen|jsonArrLen@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonArrPop(kotlin/String, kotlin/String, kotlin/Long? = ...): eu.vendeli.rethis.types.core/RType? // eu.vendeli.rethis.commands/jsonArrPop|jsonArrPop@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonArrTrim(kotlin/String, kotlin/String, kotlin/Long, kotlin/Long): kotlin/Long? // eu.vendeli.rethis.commands/jsonArrTrim|jsonArrTrim@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Long;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonClear(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/jsonClear|jsonClear@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonDel(kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/jsonDel|jsonDel@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonForget(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/jsonForget|jsonForget@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonGet(kotlin/String, kotlin/String? = ...): kotlin/String? // eu.vendeli.rethis.commands/jsonGet|jsonGet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonMGet(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/String?> // eu.vendeli.rethis.commands/jsonMGet|jsonMGet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonMSet(kotlin/Array<out eu.vendeli.rethis.types.common/JsonEntry>...): kotlin/Boolean // eu.vendeli.rethis.commands/jsonMSet|jsonMSet@eu.vendeli.rethis.ReThis(kotlin.Array<out|eu.vendeli.rethis.types.common.JsonEntry>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonMerge(kotlin/String, kotlin/String, kotlin/String): kotlin/Boolean // eu.vendeli.rethis.commands/jsonMerge|jsonMerge@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonNumIncrBy(kotlin/String, kotlin/String, kotlin/Long): kotlin.collections/List<kotlin/Long?> // eu.vendeli.rethis.commands/jsonNumIncrBy|jsonNumIncrBy@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonNumMultBy(kotlin/String, kotlin/String, kotlin/Long): kotlin.collections/List<kotlin/Long?> // eu.vendeli.rethis.commands/jsonNumMultBy|jsonNumMultBy@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonObjKeys(kotlin/String, kotlin/String): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/jsonObjKeys|jsonObjKeys@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonObjLen(kotlin/String, kotlin/String): kotlin.collections/List<kotlin/Long?> // eu.vendeli.rethis.commands/jsonObjLen|jsonObjLen@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonResp(kotlin/String, kotlin/String? = ...): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/jsonResp|jsonResp@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonSet(kotlin/String, kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/UpsertMode? = ...): kotlin/String? // eu.vendeli.rethis.commands/jsonSet|jsonSet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.UpsertMode?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonStrAppend(kotlin/String, kotlin/String, kotlin/String? = ...): kotlin/Long? // eu.vendeli.rethis.commands/jsonStrAppend|jsonStrAppend@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonStrLen(kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/jsonStrLen|jsonStrLen@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonToggle(kotlin/String, kotlin/String): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/jsonToggle|jsonToggle@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonType(kotlin/String, kotlin/String): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/jsonType|jsonType@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/keys(kotlin/String): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/keys|keys@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lIndex(kotlin/String, kotlin/Long): kotlin/String? // eu.vendeli.rethis.commands/lIndex|lIndex@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lInsert(kotlin/String, eu.vendeli.rethis.types.options/LInsertPlace, kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/lInsert|lInsert@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.options.LInsertPlace;kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lLen(kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/lLen|lLen@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lMove(kotlin/String, kotlin/String, eu.vendeli.rethis.types.common/MoveDirection, eu.vendeli.rethis.types.common/MoveDirection): kotlin/String? // eu.vendeli.rethis.commands/lMove|lMove@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.common.MoveDirection;eu.vendeli.rethis.types.common.MoveDirection){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lPop(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/lPop|lPop@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lPop(kotlin/String, kotlin/Long): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/lPop|lPop@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lPos(kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/LPosOption.Count, kotlin/Array<out eu.vendeli.rethis.types.options/LPosOption.CommonOption>...): kotlin.collections/List<kotlin/Long> // eu.vendeli.rethis.commands/lPos|lPos@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.LPosOption.Count;kotlin.Array<out|eu.vendeli.rethis.types.options.LPosOption.CommonOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lPos(kotlin/String, kotlin/String, kotlin/Array<out eu.vendeli.rethis.types.options/LPosOption.CommonOption>...): kotlin/Long? // eu.vendeli.rethis.commands/lPos|lPos@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Array<out|eu.vendeli.rethis.types.options.LPosOption.CommonOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lPush(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long? // eu.vendeli.rethis.commands/lPush|lPush@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lPushX(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long? // eu.vendeli.rethis.commands/lPushX|lPushX@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lRange(kotlin/String, kotlin/Long, kotlin/Long): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/lRange|lRange@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lRem(kotlin/String, kotlin/Long, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/lRem|lRem@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lSet(kotlin/String, kotlin/Long, kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/lSet|lSet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lTrim(kotlin/String, kotlin.ranges/IntRange): kotlin/String? // eu.vendeli.rethis.commands/lTrim|lTrim@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.ranges.IntRange){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lcs(kotlin/String, kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/lcs|lcs@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lcs(kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/LcsMode.IDX, eu.vendeli.rethis.types.options/MinMatchLen? = ..., kotlin/Boolean = ...): eu.vendeli.rethis.types.common/LcsResult // eu.vendeli.rethis.commands/lcs|lcs@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.LcsMode.IDX;eu.vendeli.rethis.types.options.MinMatchLen?;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lcs(kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/LcsMode.LEN = ...): kotlin/Long // eu.vendeli.rethis.commands/lcs|lcs@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.LcsMode.LEN){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lmPop(eu.vendeli.rethis.types.common/MoveDirection, kotlin/Array<out kotlin/String>..., kotlin/Int? = ...): kotlin.collections/List<eu.vendeli.rethis.types.common/MPopResult> // eu.vendeli.rethis.commands/lmPop|lmPop@eu.vendeli.rethis.ReThis(eu.vendeli.rethis.types.common.MoveDirection;kotlin.Array<out|kotlin.String>...;kotlin.Int?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/mGet(kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/String?> // eu.vendeli.rethis.commands/mGet|mGet@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/mSet(kotlin/Array<out kotlin/Pair<kotlin/String, kotlin/String>>...): kotlin/Boolean // eu.vendeli.rethis.commands/mSet|mSet@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.Pair<kotlin.String,kotlin.String>>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/mSetNx(kotlin/Array<out kotlin/Pair<kotlin/String, kotlin/String>>...): kotlin/Boolean // eu.vendeli.rethis.commands/mSetNx|mSetNx@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.Pair<kotlin.String,kotlin.String>>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/migrate(kotlin/String, kotlin/Int, kotlin/String, kotlin/Long, kotlin.time/Duration, kotlin/Array<out eu.vendeli.rethis.types.options/MigrateOption>...): kotlin/String? // eu.vendeli.rethis.commands/migrate|migrate@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Int;kotlin.String;kotlin.Long;kotlin.time.Duration;kotlin.Array<out|eu.vendeli.rethis.types.options.MigrateOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/move(kotlin/String, kotlin/Long): kotlin/Boolean // eu.vendeli.rethis.commands/move|move@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/multi(): kotlin/Boolean // eu.vendeli.rethis.commands/multi|multi@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/objectEncoding(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/objectEncoding|objectEncoding@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/objectFreq(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/objectFreq|objectFreq@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/objectIdleTime(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/objectIdleTime|objectIdleTime@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/objectRefCount(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/objectRefCount|objectRefCount@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pExpire(kotlin/String, kotlin/Long, eu.vendeli.rethis.types.options/UpdateStrategyOption? = ...): kotlin/Boolean // eu.vendeli.rethis.commands/pExpire|pExpire@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;eu.vendeli.rethis.types.options.UpdateStrategyOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pExpireAt(kotlin/String, kotlin/Long, eu.vendeli.rethis.types.options/UpdateStrategyOption? = ...): kotlin/Boolean // eu.vendeli.rethis.commands/pExpireAt|pExpireAt@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;eu.vendeli.rethis.types.options.UpdateStrategyOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pExpireAt(kotlin/String, kotlinx.datetime/Instant, eu.vendeli.rethis.types.options/UpdateStrategyOption? = ...): kotlin/Boolean // eu.vendeli.rethis.commands/pExpireAt|pExpireAt@eu.vendeli.rethis.ReThis(kotlin.String;kotlinx.datetime.Instant;eu.vendeli.rethis.types.options.UpdateStrategyOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pExpireTime(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/pExpireTime|pExpireTime@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pSubscribe(kotlin/Array<out eu.vendeli.rethis.types.common/ChannelSubscription>...) // eu.vendeli.rethis.commands/pSubscribe|pSubscribe@eu.vendeli.rethis.ReThis(kotlin.Array<out|eu.vendeli.rethis.types.common.ChannelSubscription>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pSubscribe(kotlin/String, eu.vendeli.rethis.types.core/SubscriptionHandler) // eu.vendeli.rethis.commands/pSubscribe|pSubscribe@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.core.SubscriptionHandler){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pTTL(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/pTTL|pTTL@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pUnsubscribe(kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.commands/pUnsubscribe|pUnsubscribe@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/persist(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.commands/persist|persist@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pfAdd(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Boolean // eu.vendeli.rethis.commands/pfAdd|pfAdd@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pfCount(kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/pfCount|pfCount@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pfMerge(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/String? // eu.vendeli.rethis.commands/pfMerge|pfMerge@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pfSelfTest(): eu.vendeli.rethis.types.core/RType? // eu.vendeli.rethis.commands/pfSelfTest|pfSelfTest@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/ping(kotlin/String? = ...): kotlin/String? // eu.vendeli.rethis.commands/ping|ping@eu.vendeli.rethis.ReThis(kotlin.String?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pubSubChannels(kotlin/String? = ...): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/pubSubChannels|pubSubChannels@eu.vendeli.rethis.ReThis(kotlin.String?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pubSubNumPat(): kotlin/Long // eu.vendeli.rethis.commands/pubSubNumPat|pubSubNumPat@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pubSubNumSub(kotlin/Array<out kotlin/String>...): kotlin.collections/List<eu.vendeli.rethis.types.common/PubSubNumEntry> // eu.vendeli.rethis.commands/pubSubNumSub|pubSubNumSub@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pubSubShardChannels(kotlin/String? = ...): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/pubSubShardChannels|pubSubShardChannels@eu.vendeli.rethis.ReThis(kotlin.String?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/pubSubShardNumSub(kotlin/Array<out kotlin/String>...): kotlin.collections/List<eu.vendeli.rethis.types.common/PubSubNumEntry> // eu.vendeli.rethis.commands/pubSubShardNumSub|pubSubShardNumSub@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/publish(kotlin/String, kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/publish|publish@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/rPop(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/rPop|rPop@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/rPop(kotlin/String, kotlin/Long): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/rPop|rPop@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/rPush(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long? // eu.vendeli.rethis.commands/rPush|rPush@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/rPushX(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long? // eu.vendeli.rethis.commands/rPushX|rPushX@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/randomKey(): kotlin/String? // eu.vendeli.rethis.commands/randomKey|randomKey@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/rename(kotlin/String, kotlin/String): kotlin/Boolean // eu.vendeli.rethis.commands/rename|rename@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/renameNx(kotlin/String, kotlin/String): kotlin/Boolean // eu.vendeli.rethis.commands/renameNx|renameNx@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/restore(kotlin/String, kotlin/Long, kotlin/ByteArray, kotlin/Array<out eu.vendeli.rethis.types.options/RestoreOption>...): kotlin/Boolean // eu.vendeli.rethis.commands/restore|restore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.ByteArray;kotlin.Array<out|eu.vendeli.rethis.types.options.RestoreOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sAdd(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/sAdd|sAdd@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sCard(kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/sCard|sCard@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sDiff(kotlin/Array<out kotlin/String>...): kotlin.collections/Set<kotlin/String> // eu.vendeli.rethis.commands/sDiff|sDiff@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sDiffStore(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/sDiffStore|sDiffStore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sInter(kotlin/Array<out kotlin/String>...): kotlin.collections/Set<kotlin/String> // eu.vendeli.rethis.commands/sInter|sInter@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sInterCard(kotlin/Array<out kotlin/String>..., kotlin/Long? = ...): kotlin/Long // eu.vendeli.rethis.commands/sInterCard|sInterCard@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sInterStore(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/sInterStore|sInterStore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sIsMember(kotlin/String, kotlin/String): kotlin/Boolean // eu.vendeli.rethis.commands/sIsMember|sIsMember@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sMembers(kotlin/String): kotlin.collections/Set<kotlin/String> // eu.vendeli.rethis.commands/sMembers|sMembers@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sMisMember(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/Boolean> // eu.vendeli.rethis.commands/sMisMember|sMisMember@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sMove(kotlin/String, kotlin/String, kotlin/String): kotlin/Boolean // eu.vendeli.rethis.commands/sMove|sMove@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sPop(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/sPop|sPop@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sPop(kotlin/String, kotlin/Long): kotlin.collections/Set<kotlin/String> // eu.vendeli.rethis.commands/sPop|sPop@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sPublish(kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/sPublish|sPublish@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sRandMember(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/sRandMember|sRandMember@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sRandMember(kotlin/String, kotlin/Long): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/sRandMember|sRandMember@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sRem(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/sRem|sRem@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sScan(kotlin/String, kotlin/Long, kotlin/Array<out eu.vendeli.rethis.types.options/SScanOption>...): eu.vendeli.rethis.types.common/ScanResult<kotlin/String> // eu.vendeli.rethis.commands/sScan|sScan@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Array<out|eu.vendeli.rethis.types.options.SScanOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sSubscribe(kotlin/Array<out eu.vendeli.rethis.types.common/ChannelSubscription>...) // eu.vendeli.rethis.commands/sSubscribe|sSubscribe@eu.vendeli.rethis.ReThis(kotlin.Array<out|eu.vendeli.rethis.types.common.ChannelSubscription>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sSubscribe(kotlin/String, eu.vendeli.rethis.types.core/SubscriptionHandler) // eu.vendeli.rethis.commands/sSubscribe|sSubscribe@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.core.SubscriptionHandler){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sUnion(kotlin/Array<out kotlin/String>...): kotlin.collections/Set<kotlin/String> // eu.vendeli.rethis.commands/sUnion|sUnion@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sUnionStore(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/sUnionStore|sUnionStore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sUnsubscribe(kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.commands/sUnsubscribe|sUnsubscribe@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/scan(kotlin/Long, kotlin/Array<out eu.vendeli.rethis.types.options/ScanOption>...): eu.vendeli.rethis.types.common/ScanResult<kotlin/String> // eu.vendeli.rethis.commands/scan|scan@eu.vendeli.rethis.ReThis(kotlin.Long;kotlin.Array<out|eu.vendeli.rethis.types.options.ScanOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/scriptDebug(kotlin/String): kotlin/Boolean // eu.vendeli.rethis.commands/scriptDebug|scriptDebug@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/scriptExists(kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/Boolean> // eu.vendeli.rethis.commands/scriptExists|scriptExists@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/scriptFlush(): kotlin/Boolean // eu.vendeli.rethis.commands/scriptFlush|scriptFlush@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/scriptKill(): kotlin/Boolean // eu.vendeli.rethis.commands/scriptKill|scriptKill@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/scriptLoad(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/scriptLoad|scriptLoad@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/select(kotlin/Int): kotlin/Boolean // eu.vendeli.rethis.commands/select|select@eu.vendeli.rethis.ReThis(kotlin.Int){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/set(kotlin/String, kotlin/String, kotlin/Array<out eu.vendeli.rethis.types.options/SetOption>...): kotlin/String? // eu.vendeli.rethis.commands/set|set@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Array<out|eu.vendeli.rethis.types.options.SetOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/setBit(kotlin/String, kotlin/Long, kotlin/Long): kotlin/Long // eu.vendeli.rethis.commands/setBit|setBit@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/setRange(kotlin/String, kotlin/Long, kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/setRange|setRange@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sort(kotlin/String, eu.vendeli.rethis.types.options/SortOption.STORE, kotlin/Array<out eu.vendeli.rethis.types.options/SortOption>...): kotlin/Long // eu.vendeli.rethis.commands/sort|sort@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.options.SortOption.STORE;kotlin.Array<out|eu.vendeli.rethis.types.options.SortOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sort(kotlin/String, kotlin/Array<out eu.vendeli.rethis.types.options/SortOption>...): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/sort|sort@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|eu.vendeli.rethis.types.options.SortOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/sortRo(kotlin/String, kotlin/Array<out eu.vendeli.rethis.types.options/SortRoOption>...): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/sortRo|sortRo@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|eu.vendeli.rethis.types.options.SortRoOption>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/strlen(kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/strlen|strlen@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/subscribe(kotlin/Array<out eu.vendeli.rethis.types.common/ChannelSubscription>...) // eu.vendeli.rethis.commands/subscribe|subscribe@eu.vendeli.rethis.ReThis(kotlin.Array<out|eu.vendeli.rethis.types.common.ChannelSubscription>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/subscribe(kotlin/String, eu.vendeli.rethis.types.core/SubscriptionHandler) // eu.vendeli.rethis.commands/subscribe|subscribe@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.core.SubscriptionHandler){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/touch(kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/touch|touch@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/ttl(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/ttl|ttl@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/type(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/type|type@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/unlink(kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/unlink|unlink@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/unsubscribe(kotlin/Array<out kotlin/String>...): eu.vendeli.rethis.types.core/RType // eu.vendeli.rethis.commands/unsubscribe|unsubscribe@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/unwatch(): kotlin/Boolean // eu.vendeli.rethis.commands/unwatch|unwatch@eu.vendeli.rethis.ReThis(){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/wait(kotlin/Long, kotlin/Long): kotlin/Long // eu.vendeli.rethis.commands/wait|wait@eu.vendeli.rethis.ReThis(kotlin.Long;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/waitAof(kotlin/Long, kotlin/Long, kotlin/Long): eu.vendeli.rethis.types.common/WaitAofResult // eu.vendeli.rethis.commands/waitAof|waitAof@eu.vendeli.rethis.ReThis(kotlin.Long;kotlin.Long;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/watch(kotlin/Array<out kotlin/String>...): kotlin/Boolean // eu.vendeli.rethis.commands/watch|watch@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xAck(kotlin/String, kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long? // eu.vendeli.rethis.commands/xAck|xAck@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xAdd(kotlin/String, eu.vendeli.rethis.types.options/XAddOption.NOMKSTREAM? = ..., eu.vendeli.rethis.types.options/XAddOption.Trim? = ..., eu.vendeli.rethis.types.options/XAddOption.Identifier, kotlin/Array<out kotlin/Pair<kotlin/String, kotlin/String>>...): kotlin/String? // eu.vendeli.rethis.commands/xAdd|xAdd@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.options.XAddOption.NOMKSTREAM?;eu.vendeli.rethis.types.options.XAddOption.Trim?;eu.vendeli.rethis.types.options.XAddOption.Identifier;kotlin.Array<out|kotlin.Pair<kotlin.String,kotlin.String>>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xAutoClaim(kotlin/String, kotlin/String, kotlin/String, kotlin/Long, kotlin/String, kotlin/Long? = ..., kotlin/Boolean = ...): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/xAutoClaim|xAutoClaim@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String;kotlin.Long;kotlin.String;kotlin.Long?;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xClaim(kotlin/String, kotlin/String, kotlin/String, kotlin/Long, kotlin/Array<out kotlin/String>..., eu.vendeli.rethis.types.options/XClaimOption.Idle? = ..., eu.vendeli.rethis.types.options/XClaimOption.Time? = ..., eu.vendeli.rethis.types.options/XClaimOption.RetryCount? = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., eu.vendeli.rethis.types.options/XClaimOption.LastId? = ...): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/xClaim|xClaim@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String;kotlin.Long;kotlin.Array<out|kotlin.String>...;eu.vendeli.rethis.types.options.XClaimOption.Idle?;eu.vendeli.rethis.types.options.XClaimOption.Time?;eu.vendeli.rethis.types.options.XClaimOption.RetryCount?;kotlin.Boolean;kotlin.Boolean;eu.vendeli.rethis.types.options.XClaimOption.LastId?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xDel(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long? // eu.vendeli.rethis.commands/xDel|xDel@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xGroupCreate(kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/XId, kotlin/Boolean = ..., kotlin/Long? = ...): kotlin/Boolean // eu.vendeli.rethis.commands/xGroupCreate|xGroupCreate@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.XId;kotlin.Boolean;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xGroupCreateConsumer(kotlin/String, kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/xGroupCreateConsumer|xGroupCreateConsumer@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xGroupDelConsumer(kotlin/String, kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/xGroupDelConsumer|xGroupDelConsumer@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xGroupDestroy(kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/xGroupDestroy|xGroupDestroy@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xGroupSetId(kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/XId, kotlin/Long? = ...): kotlin/Boolean // eu.vendeli.rethis.commands/xGroupSetId|xGroupSetId@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.XId;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xInfoConsumers(kotlin/String, kotlin/String): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/xInfoConsumers|xInfoConsumers@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xInfoGroups(kotlin/String): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/xInfoGroups|xInfoGroups@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xInfoStream(kotlin/String, kotlin/Boolean = ..., eu.vendeli.rethis.types.options/XOption.Limit? = ...): kotlin.collections/Map<kotlin/String, eu.vendeli.rethis.types.core/RType?> // eu.vendeli.rethis.commands/xInfoStream|xInfoStream@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Boolean;eu.vendeli.rethis.types.options.XOption.Limit?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xLen(kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/xLen|xLen@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xPending(kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/XPendingOption? = ...): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/xPending|xPending@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.XPendingOption?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xRange(kotlin/String, kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/XOption.Limit? = ...): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/xRange|xRange@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.XOption.Limit?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xRead(kotlin.collections/List<kotlin/String>, kotlin.collections/List<kotlin/String>, eu.vendeli.rethis.types.options/XOption.Limit? = ..., kotlin/Long? = ...): kotlin.collections/Map<kotlin/String, eu.vendeli.rethis.types.core/RType?>? // eu.vendeli.rethis.commands/xRead|xRead@eu.vendeli.rethis.ReThis(kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.String>;eu.vendeli.rethis.types.options.XOption.Limit?;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xReadGroup(kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/XOption.Limit? = ..., kotlin/Long? = ..., kotlin/Boolean = ..., kotlin.collections/List<kotlin/String>, kotlin.collections/List<kotlin/String>): kotlin.collections/Map<kotlin/String, eu.vendeli.rethis.types.core/RType?>? // eu.vendeli.rethis.commands/xReadGroup|xReadGroup@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.XOption.Limit?;kotlin.Long?;kotlin.Boolean;kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.String>){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xRevRange(kotlin/String, kotlin/String, kotlin/String, eu.vendeli.rethis.types.options/XOption.Limit? = ...): kotlin.collections/List<eu.vendeli.rethis.types.core/RType> // eu.vendeli.rethis.commands/xRevRange|xRevRange@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String;eu.vendeli.rethis.types.options.XOption.Limit?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xSetId(kotlin/String, kotlin/String, kotlin/Long? = ..., kotlin/String? = ...): kotlin/Boolean // eu.vendeli.rethis.commands/xSetId|xSetId@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Long?;kotlin.String?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/xTrim(kotlin/String, kotlin/Long, eu.vendeli.rethis.types.options/TrimmingStrategy, eu.vendeli.rethis.types.options/Exactement? = ..., eu.vendeli.rethis.types.options/XOption.Limit? = ...): kotlin/Long? // eu.vendeli.rethis.commands/xTrim|xTrim@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;eu.vendeli.rethis.types.options.TrimmingStrategy;eu.vendeli.rethis.types.options.Exactement?;eu.vendeli.rethis.types.options.XOption.Limit?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zAdd(kotlin/String, eu.vendeli.rethis.types.options/UpdateStrategyOption? = ..., kotlin/Boolean = ..., kotlin/Array<out eu.vendeli.rethis.types.common/ZMember>...): kotlin/Long // eu.vendeli.rethis.commands/zAdd|zAdd@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.options.UpdateStrategyOption?;kotlin.Boolean;kotlin.Array<out|eu.vendeli.rethis.types.common.ZMember>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zAdd(kotlin/String, kotlin/Array<out eu.vendeli.rethis.types.common/ZMember>..., eu.vendeli.rethis.types.options/UpdateStrategyOption.ExistenceRule? = ..., eu.vendeli.rethis.types.options/UpdateStrategyOption.ComparisonRule? = ..., kotlin/Boolean = ..., kotlin/Boolean = ...): kotlin/Long // eu.vendeli.rethis.commands/zAdd|zAdd@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|eu.vendeli.rethis.types.common.ZMember>...;eu.vendeli.rethis.types.options.UpdateStrategyOption.ExistenceRule?;eu.vendeli.rethis.types.options.UpdateStrategyOption.ComparisonRule?;kotlin.Boolean;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zCard(kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/zCard|zCard@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zCount(kotlin/String, kotlin/Double, kotlin/Double): kotlin/Long // eu.vendeli.rethis.commands/zCount|zCount@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Double;kotlin.Double){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zDiff(kotlin/Array<out kotlin/String>..., kotlin/Boolean = ...): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/zDiff|zDiff@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zDiffStore(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/zDiffStore|zDiffStore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zIncrBy(kotlin/String, kotlin/String, kotlin/Double): kotlin/Double // eu.vendeli.rethis.commands/zIncrBy|zIncrBy@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Double){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zInter(kotlin/Array<out kotlin/String>..., kotlin.collections/List<kotlin/Long>? = ..., eu.vendeli.rethis.types.options/ZAggregate? = ..., kotlin/Boolean = ...): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/zInter|zInter@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...;kotlin.collections.List<kotlin.Long>?;eu.vendeli.rethis.types.options.ZAggregate?;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zInterCard(kotlin/Array<out kotlin/String>..., kotlin/Long? = ...): kotlin/Long // eu.vendeli.rethis.commands/zInterCard|zInterCard@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zInterStore(kotlin/String, kotlin/Array<out kotlin/String>..., kotlin.collections/List<kotlin/Long>? = ..., eu.vendeli.rethis.types.options/ZAggregate? = ...): kotlin/Long // eu.vendeli.rethis.commands/zInterStore|zInterStore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...;kotlin.collections.List<kotlin.Long>?;eu.vendeli.rethis.types.options.ZAggregate?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zLexCount(kotlin/String, kotlin/String, kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/zLexCount|zLexCount@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zMPop(eu.vendeli.rethis.types.options/ZPopCommonOption, kotlin/Array<out kotlin/String>..., kotlin/Long? = ...): kotlin.collections/List<eu.vendeli.rethis.types.common/MPopResult> // eu.vendeli.rethis.commands/zMPop|zMPop@eu.vendeli.rethis.ReThis(eu.vendeli.rethis.types.options.ZPopCommonOption;kotlin.Array<out|kotlin.String>...;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zMScore(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<kotlin/Double?> // eu.vendeli.rethis.commands/zMScore|zMScore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zPopMax(kotlin/String, kotlin/Long? = ...): kotlin.collections/List<eu.vendeli.rethis.types.common/MPopResult> // eu.vendeli.rethis.commands/zPopMax|zPopMax@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zPopMin(kotlin/String): kotlin.collections/Map<kotlin/String, kotlin/Double?> // eu.vendeli.rethis.commands/zPopMin|zPopMin@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zPopMin(kotlin/String, kotlin/Long): kotlin.collections/List<kotlin.collections/List<eu.vendeli.rethis.types.common/ZMember>> // eu.vendeli.rethis.commands/zPopMin|zPopMin@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRandMember(kotlin/String): kotlin/String? // eu.vendeli.rethis.commands/zRandMember|zRandMember@eu.vendeli.rethis.ReThis(kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRandMember(kotlin/String, kotlin/Long): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/zRandMember|zRandMember@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRandMember(kotlin/String, kotlin/Long, kotlin/Boolean = ...): kotlin.collections/List<kotlin.collections/List<eu.vendeli.rethis.types.common/ZMember>> // eu.vendeli.rethis.commands/zRandMember|zRandMember@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRange(kotlin/String, kotlin/Long, kotlin/Long, eu.vendeli.rethis.types.options/ZRangeOption.Type? = ..., kotlin/Boolean = ..., eu.vendeli.rethis.types.options/ZRangeOption.LIMIT? = ..., kotlin/Boolean = ...): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/zRange|zRange@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Long;eu.vendeli.rethis.types.options.ZRangeOption.Type?;kotlin.Boolean;eu.vendeli.rethis.types.options.ZRangeOption.LIMIT?;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRangeStore(kotlin/String, kotlin/String, kotlin/Long, kotlin/Long, eu.vendeli.rethis.types.options/ZRangeOption.Type? = ..., kotlin/Boolean = ..., kotlin/Long? = ..., kotlin/Long? = ...): kotlin/Long // eu.vendeli.rethis.commands/zRangeStore|zRangeStore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.Long;kotlin.Long;eu.vendeli.rethis.types.options.ZRangeOption.Type?;kotlin.Boolean;kotlin.Long?;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRank(kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/zRank|zRank@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRem(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin/Long // eu.vendeli.rethis.commands/zRem|zRem@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRemRangeByLex(kotlin/String, kotlin/String, kotlin/String): kotlin/Long // eu.vendeli.rethis.commands/zRemRangeByLex|zRemRangeByLex@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRemRangeByRank(kotlin/String, kotlin/Long, kotlin/Long): kotlin/Long // eu.vendeli.rethis.commands/zRemRangeByRank|zRemRangeByRank@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.Long){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRemRangeByScore(kotlin/String, kotlin/Double, kotlin/Double): kotlin/Long // eu.vendeli.rethis.commands/zRemRangeByScore|zRemRangeByScore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Double;kotlin.Double){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zRevRank(kotlin/String, kotlin/String): kotlin/Long? // eu.vendeli.rethis.commands/zRevRank|zRevRank@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zScan(kotlin/String, kotlin/Long, kotlin/String? = ..., kotlin/Long? = ...): eu.vendeli.rethis.types.common/ScanResult<kotlin/Pair<kotlin/String, kotlin/String>> // eu.vendeli.rethis.commands/zScan|zScan@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Long;kotlin.String?;kotlin.Long?){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zScore(kotlin/String, kotlin/String): kotlin/Double? // eu.vendeli.rethis.commands/zScore|zScore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zUnion(kotlin/Array<out kotlin/String>..., kotlin.collections/List<kotlin/Long>? = ..., eu.vendeli.rethis.types.options/ZAggregate? = ..., kotlin/Boolean = ...): kotlin.collections/List<kotlin/String> // eu.vendeli.rethis.commands/zUnion|zUnion@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...;kotlin.collections.List<kotlin.Long>?;eu.vendeli.rethis.types.options.ZAggregate?;kotlin.Boolean){}[0]
final suspend fun (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/zUnionStore(kotlin/String, kotlin/Array<out kotlin/String>..., kotlin.collections/List<kotlin/Long>? = ..., eu.vendeli.rethis.types.options/ZAggregate? = ...): kotlin/Long // eu.vendeli.rethis.commands/zUnionStore|zUnionStore@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...;kotlin.collections.List<kotlin.Long>?;eu.vendeli.rethis.types.options.ZAggregate?){}[0]
final suspend inline fun <#A: reified kotlin/Any, #B: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.utils/execute(kotlin.collections/List<eu.vendeli.rethis.types.core/Argument>): kotlin.collections/Map<#A, #B?>? // eu.vendeli.rethis.utils/execute|execute@eu.vendeli.rethis.ReThis(kotlin.collections.List<eu.vendeli.rethis.types.core.Argument>){0§<kotlin.Any>;1§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/get(kotlin/String): #A? // eu.vendeli.rethis.commands/get|get@eu.vendeli.rethis.ReThis(kotlin.String){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/getDel(kotlin/String): #A? // eu.vendeli.rethis.commands/getDel|getDel@eu.vendeli.rethis.ReThis(kotlin.String){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/getEx(kotlin/String, eu.vendeli.rethis.types.options/GetExOption): #A? // eu.vendeli.rethis.commands/getEx|getEx@eu.vendeli.rethis.ReThis(kotlin.String;eu.vendeli.rethis.types.options.GetExOption){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hGet(kotlin/String, kotlin/String): #A? // eu.vendeli.rethis.commands/hGet|hGet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hMGet(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<#A?> // eu.vendeli.rethis.commands/hMGet|hMGet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hVals(kotlin/String): kotlin.collections/List<#A> // eu.vendeli.rethis.commands/hVals|hVals@eu.vendeli.rethis.ReThis(kotlin.String){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonGet(kotlin/String, kotlin/String? = ...): #A? // eu.vendeli.rethis.commands/jsonGet|jsonGet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String?){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonMGet(kotlin/String, kotlin/Array<out kotlin/String>...): kotlin.collections/List<#A?> // eu.vendeli.rethis.commands/jsonMGet|jsonMGet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.String>...){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/jsonSet(kotlin/String, kotlin/String, #A, eu.vendeli.rethis.types.options/UpsertMode? = ...): kotlin/String? // eu.vendeli.rethis.commands/jsonSet|jsonSet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String;0:0;eu.vendeli.rethis.types.options.UpsertMode?){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/lcs(kotlin/String, kotlin/String): #A? // eu.vendeli.rethis.commands/lcs|lcs@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.String){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/mGet(kotlin/Array<out kotlin/String>...): kotlin.collections/List<#A?> // eu.vendeli.rethis.commands/mGet|mGet@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.String>...){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.utils/execute(kotlin.collections/List<eu.vendeli.rethis.types.core/Argument>): #A? // eu.vendeli.rethis.utils/execute|execute@eu.vendeli.rethis.ReThis(kotlin.collections.List<eu.vendeli.rethis.types.core.Argument>){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.utils/execute(kotlin.collections/List<eu.vendeli.rethis.types.core/Argument>, kotlin/Boolean = ...): kotlin.collections/List<#A>? // eu.vendeli.rethis.utils/execute|execute@eu.vendeli.rethis.ReThis(kotlin.collections.List<eu.vendeli.rethis.types.core.Argument>;kotlin.Boolean){0§<kotlin.Any>}[0]
final suspend inline fun <#A: reified kotlin/Any?> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hMSet(kotlin/String, kotlin/Array<out kotlin/Pair<kotlin/String, #A>>...): kotlin/Boolean // eu.vendeli.rethis.commands/hMSet|hMSet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.Pair<kotlin.String,0:0>>...){0§<kotlin.Any?>}[0]
final suspend inline fun <#A: reified kotlin/Any?> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/hSet(kotlin/String, kotlin/Array<out kotlin/Pair<kotlin/String, #A>>...): kotlin/Long? // eu.vendeli.rethis.commands/hSet|hSet@eu.vendeli.rethis.ReThis(kotlin.String;kotlin.Array<out|kotlin.Pair<kotlin.String,0:0>>...){0§<kotlin.Any?>}[0]
final suspend inline fun <#A: reified kotlin/Any?> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/mSet(kotlin/Array<out kotlin/Pair<kotlin/String, #A>>...): kotlin/Boolean // eu.vendeli.rethis.commands/mSet|mSet@eu.vendeli.rethis.ReThis(kotlin.Array<out|kotlin.Pair<kotlin.String,0:0>>...){0§<kotlin.Any?>}[0]
final suspend inline fun <#A: reified kotlin/Any?> (eu.vendeli.rethis/ReThis).eu.vendeli.rethis.commands/set(kotlin/String, #A): kotlin/Boolean // eu.vendeli.rethis.commands/set|set@eu.vendeli.rethis.ReThis(kotlin.String;0:0){0§<kotlin.Any?>}[0]
